{
    "depots": {
        "sheetName": "Depots",
        "fields": [
            {
                "name": "id",
                "props": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "required": true,
                "leaf": true,
                "isListId": true
            },
            {
                "name": "duration",
                "props": {
                    "type": "number",
                    "description": "Duration that vehicle spends at a depot (e.g. goods loading), seconds.",
                    "minimum": 0,
                    "default": 0
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "delayed_start_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_hour": {
                            "type": "number",
                            "default": 15,
                            "minimum": 0,
                            "description": "Cost per each hour of delayed start from the depot.\n\nThe cost should normally be higher than `vehicle.cost.per_hour` to minimize delayed start."
                        }
                    },
                    "required": [
                        "per_hour"
                    ],
                    "additionalProperties": false,
                    "description": "Costs of delayed start of a route at the depot.\n\nVehicles dispatched too late after depot or vehicle shift time window start will result corresponding violation cost added to the total cost of the route."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "delayed_start_costs.per_hour",
                "props": {
                    "type": "number",
                    "default": 15,
                    "minimum": 0,
                    "description": "Cost per each hour of delayed start from the depot.\n\nThe cost should normally be higher than `vehicle.cost.per_hour` to minimize delayed start."
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "location",
                "props": {
                    "description": "Geographic coordinate in WGS84 projection.",
                    "type": "object",
                    "properties": {
                        "lat": {
                            "type": "number",
                            "minimum": -90,
                            "maximum": 90,
                            "description": "Latitude"
                        },
                        "lng": {
                            "type": "number",
                            "minimum": -180,
                            "maximum": 180,
                            "description": "Longitude"
                        }
                    },
                    "required": [
                        "lat",
                        "lng"
                    ],
                    "additionalProperties": false
                },
                "required": true,
                "leaf": false,
                "isList": false
            },
            {
                "name": "location.lat",
                "props": {
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90,
                    "description": "Latitude"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "location.lng",
                "props": {
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180,
                    "description": "Longitude"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "throughput",
                "props": {
                    "description": "Maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                    "oneOf": [
                        {
                            "type": "object",
                            "description": "Maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "items_per_hour": {
                                            "type": "number",
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Maximum number of items released per hour."
                                        }
                                    },
                                    "required": [
                                        "items_per_hour"
                                    ],
                                    "additionalProperties": false
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "weight_per_hour": {
                                            "type": "number",
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Maximum weight released per hour, kilograms."
                                        }
                                    },
                                    "required": [
                                        "weight_per_hour"
                                    ],
                                    "additionalProperties": false
                                }
                            ]
                        },
                        {
                            "description": "Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                            "oneOf": [
                                {
                                    "type": "array",
                                    "description": "Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                                    "items": {
                                        "properties": {
                                            "time_point": {
                                                "type": "string",
                                                "description": "Time point when throughput value starts to apply, ISO8601 datetime format."
                                            },
                                            "weight_per_hour": {
                                                "type": "number",
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Maximum weight released per hour, kilograms."
                                            }
                                        },
                                        "type": "object",
                                        "required": [
                                            "weight_per_hour",
                                            "time_point"
                                        ],
                                        "additionalProperties": false,
                                        "description": "Maximum weight released by depot per hour after specified time point, kilograms."
                                    },
                                    "minItems": 1
                                },
                                {
                                    "type": "array",
                                    "description": "Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                                    "items": {
                                        "properties": {
                                            "time_point": {
                                                "type": "string",
                                                "description": "Time point when throughput value starts to apply, ISO8601 datetime format."
                                            },
                                            "items_per_hour": {
                                                "type": "number",
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Maximum number of items released per hour."
                                            }
                                        },
                                        "type": "object",
                                        "required": [
                                            "items_per_hour",
                                            "time_point"
                                        ],
                                        "additionalProperties": false,
                                        "description": "Maximum number of items released by depot per hour after specified time point, items."
                                    },
                                    "minItems": 1
                                }
                            ]
                        }
                    ]
                },
                "required": false,
                "leaf": false,
                "choice": [],
                "isChoice": true
            },
            {
                "name": "throughput_violation_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "default": 100,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per an event of depot throughput violation"
                        },
                        "per_kg": {
                            "type": "number",
                            "default": 10,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each kg of handled load exceeding defined depot throughput"
                        },
                        "per_count": {
                            "type": "number",
                            "default": 10,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each countable item of handled load exceeding defined depot throughput"
                        }
                    },
                    "additionalProperties": false,
                    "description": "Costs of violating defined depot throughput.\n\nAdded to the total cost of the route when load handled by depot exceeds defined throughput limits."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "throughput_violation_costs.per_count",
                "props": {
                    "type": "number",
                    "default": 10,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each countable item of handled load exceeding defined depot throughput"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "throughput_violation_costs.per_event",
                "props": {
                    "type": "number",
                    "default": 100,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per an event of depot throughput violation"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "throughput_violation_costs.per_kg",
                "props": {
                    "type": "number",
                    "default": 10,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each kg of handled load exceeding defined depot throughput"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "time_window",
                "props": {
                    "type": "object",
                    "properties": {
                        "start": {
                            "type": "string",
                            "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                        },
                        "end": {
                            "type": "string",
                            "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                        },
                        "strict": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                        }
                    },
                    "required": [
                        "start",
                        "end"
                    ],
                    "additionalProperties": false,
                    "description": "Time window for depot operations.\n \nRange of time, when depot is allowed to dispatch or accept returning vehicles."
                },
                "required": true,
                "leaf": false,
                "isList": false
            },
            {
                "name": "time_window.end",
                "props": {
                    "type": "string",
                    "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "time_window.start",
                "props": {
                    "type": "string",
                    "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "time_window.strict",
                "props": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "untimely_operations_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "default": 15,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per an event of untimely operations"
                        },
                        "per_early_minute": {
                            "type": "number",
                            "default": 0.25,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per a minute of early operations"
                        },
                        "per_late_minute": {
                            "type": "number",
                            "default": 0.25,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per a minute of late operations"
                        }
                    },
                    "additionalProperties": false,
                    "description": "Costs for depot time window violation.\n\nVehicles dispatched too early (before depot time window start) or returned too late (after time window end) will result violation cost added to the total cost of the route."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "untimely_operations_costs.per_early_minute",
                "props": {
                    "type": "number",
                    "default": 0.25,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per a minute of early operations"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "untimely_operations_costs.per_event",
                "props": {
                    "type": "number",
                    "default": 15,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per an event of untimely operations"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "untimely_operations_costs.per_late_minute",
                "props": {
                    "type": "number",
                    "default": 0.25,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per a minute of late operations"
                },
                "required": false,
                "leaf": true
            }
        ],
        "rootSchema": {
            "type": "object",
            "additionalProperties": {
                "title": "Depot",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "location": {
                                "description": "Geographic coordinate in WGS84 projection.",
                                "type": "object",
                                "properties": {
                                    "lat": {
                                        "type": "number",
                                        "minimum": -90,
                                        "maximum": 90,
                                        "description": "Latitude"
                                    },
                                    "lng": {
                                        "type": "number",
                                        "minimum": -180,
                                        "maximum": 180,
                                        "description": "Longitude"
                                    }
                                },
                                "required": [
                                    "lat",
                                    "lng"
                                ],
                                "additionalProperties": false
                            },
                            "time_window": {
                                "title": "TimeWindow",
                                "description": "Time window for depot operations.\n \nRange of time, when depot is allowed to dispatch or accept returning vehicles.",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "type": "string",
                                                "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                                            },
                                            "end": {
                                                "type": "string",
                                                "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                                            },
                                            "strict": {
                                                "type": "boolean",
                                                "default": false,
                                                "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                                            }
                                        },
                                        "required": [
                                            "start",
                                            "end"
                                        ],
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            "untimely_operations_costs": {
                                "title": "UntimelyOperationsCosts",
                                "description": "Costs for depot time window violation.\n\nVehicles dispatched too early (before depot time window start) or returned too late (after time window end) will result violation cost added to the total cost of the route.",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "per_event": {
                                                "type": "number",
                                                "default": 15,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per an event of untimely operations"
                                            },
                                            "per_early_minute": {
                                                "type": "number",
                                                "default": 0.25,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per a minute of early operations"
                                            },
                                            "per_late_minute": {
                                                "type": "number",
                                                "default": 0.25,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per a minute of late operations"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            "delayed_start_costs": {
                                "title": "DelayedStartCosts",
                                "description": "Costs of delayed start of a route at the depot.\n\nVehicles dispatched too late after depot or vehicle shift time window start will result corresponding violation cost added to the total cost of the route.",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "per_hour": {
                                                "type": "number",
                                                "default": 15,
                                                "minimum": 0,
                                                "description": "Cost per each hour of delayed start from the depot.\n\nThe cost should normally be higher than `vehicle.cost.per_hour` to minimize delayed start."
                                            }
                                        },
                                        "required": [
                                            "per_hour"
                                        ],
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            "duration": {
                                "type": "number",
                                "description": "Duration that vehicle spends at a depot (e.g. goods loading), seconds.",
                                "minimum": 0,
                                "default": 0
                            },
                            "throughput": {
                                "description": "Maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "description": "Maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "items_per_hour": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Maximum number of items released per hour."
                                                    }
                                                },
                                                "required": [
                                                    "items_per_hour"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "weight_per_hour": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Maximum weight released per hour, kilograms."
                                                    }
                                                },
                                                "required": [
                                                    "weight_per_hour"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    {
                                        "description": "Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                                        "oneOf": [
                                            {
                                                "type": "array",
                                                "description": "Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                                                "items": {
                                                    "properties": {
                                                        "time_point": {
                                                            "type": "string",
                                                            "description": "Time point when throughput value starts to apply, ISO8601 datetime format."
                                                        },
                                                        "weight_per_hour": {
                                                            "type": "number",
                                                            "minimum": 0,
                                                            "exclusiveMinimum": true,
                                                            "description": "Maximum weight released per hour, kilograms."
                                                        }
                                                    },
                                                    "type": "object",
                                                    "required": [
                                                        "weight_per_hour",
                                                        "time_point"
                                                    ],
                                                    "additionalProperties": false,
                                                    "description": "Maximum weight released by depot per hour after specified time point, kilograms."
                                                },
                                                "minItems": 1
                                            },
                                            {
                                                "type": "array",
                                                "description": "Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.",
                                                "items": {
                                                    "properties": {
                                                        "time_point": {
                                                            "type": "string",
                                                            "description": "Time point when throughput value starts to apply, ISO8601 datetime format."
                                                        },
                                                        "items_per_hour": {
                                                            "type": "number",
                                                            "minimum": 0,
                                                            "exclusiveMinimum": true,
                                                            "description": "Maximum number of items released per hour."
                                                        }
                                                    },
                                                    "type": "object",
                                                    "required": [
                                                        "items_per_hour",
                                                        "time_point"
                                                    ],
                                                    "additionalProperties": false,
                                                    "description": "Maximum number of items released by depot per hour after specified time point, items."
                                                },
                                                "minItems": 1
                                            }
                                        ]
                                    }
                                ]
                            },
                            "throughput_violation_costs": {
                                "title": "ThroughputViolationCosts",
                                "description": "Costs of violating defined depot throughput.\n\nAdded to the total cost of the route when load handled by depot exceeds defined throughput limits.",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "per_event": {
                                                "type": "number",
                                                "default": 100,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per an event of depot throughput violation"
                                            },
                                            "per_kg": {
                                                "type": "number",
                                                "default": 10,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per each kg of handled load exceeding defined depot throughput"
                                            },
                                            "per_count": {
                                                "type": "number",
                                                "default": 10,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per each countable item of handled load exceeding defined depot throughput"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                ]
                            }
                        },
                        "required": [
                            "location",
                            "time_window"
                        ],
                        "additionalProperties": false,
                        "description": "Depot where all vehicles start and optionally finish their routes."
                    }
                ]
            },
            "description": "Depots where vehicles start and finish routes."
        }
    },
    "sites": {
        "sheetName": "Sites",
        "fields": [
            {
                "name": "id",
                "props": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "required": true,
                "leaf": true,
                "isListId": true
            },
            {
                "name": "deliver_to",
                "props": {
                    "type": "string",
                    "description": "For `pickup` jobs, specifies `id` of destination site for delivery."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "duration",
                "props": {
                    "type": "number",
                    "description": "Duration of the job, performed during the site visit, seconds.\n\nExample: time to handle goods or perform services during the site visit.",
                    "minimum": 0,
                    "default": 0
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "job",
                "props": {
                    "type": "string",
                    "description": "Type of job performed at a site.\n\nFollowing types are supported:\n* `delivery` - goods are picked up at depot and delivered to this site;\n* `pickup` - goods are picked up at this site and delivered to the site specified in `deliver_to` field or to the depot at the end of the route.",
                    "enum": [
                        "pickup",
                        "delivery"
                    ],
                    "default": "delivery"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "loading_duration",
                "props": {
                    "type": "number",
                    "description": "Duration of loading the goods at the depot, seconds.\n\nWill be added to `depot.duration` to adjust time spent by vehicle at the depot.",
                    "minimum": 0,
                    "default": 0
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "preparing_duration",
                "props": {
                    "type": "number",
                    "description": "Time before the job during the site visit, seconds.\n\nFor co-located sites, will only be accounted for the first site in sequence.\n\nExample: parking time or time for security clearance during site visit, which will happen once if several sites share the same geo coordinates and time window (\"co-located\").",
                    "minimum": 0,
                    "default": 0
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "required_capabilities",
                "props": {
                    "title": "CapabilitiesList",
                    "description": "Vehicle capabilities required on site.\n\nA site can require vehicle with certain characteristics, such as cold storage, or a tailgate lift. Multiple capabilities are allowed. See `fleet{}.capabilities`.",
                    "type": "array",
                    "items": {
                        "title": "Capability",
                        "type": "string"
                    },
                    "minItems": 1
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "same_route_key",
                "props": {
                    "type": "string",
                    "description": "Ensure that sites with equal `same_route_key` will appear on the same route.\n\nNote that all unique `same_route_key` values must be also specified at `constraints.same_route_sites`."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "unperformed_cost",
                "props": {
                    "type": "number",
                    "description": "Cost of non-performing a visit.",
                    "minimum": 0,
                    "default": 100000000
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "load",
                "props": {
                    "type": "object",
                    "description": "Load at the site to be picked up or delivered by a vehicle",
                    "properties": {
                        "volume": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                        },
                        "weight": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                        },
                        "count": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                        },
                        "categories": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "title": "LoadCategory",
                                "description": "Category or safety class of transported item."
                            },
                            "description": "Categories or safety classes of transported item.",
                            "title": "LoadCategories"
                        }
                    },
                    "additionalProperties": false
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "load.categories",
                "props": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "title": "LoadCategory",
                        "description": "Category or safety class of transported item."
                    },
                    "description": "Categories or safety classes of transported item.",
                    "title": "LoadCategories"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "load.count",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "load.volume",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "load.weight",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "location",
                "props": {
                    "description": "Geographic coordinate in WGS84 projection.",
                    "type": "object",
                    "properties": {
                        "lat": {
                            "type": "number",
                            "minimum": -90,
                            "maximum": 90,
                            "description": "Latitude"
                        },
                        "lng": {
                            "type": "number",
                            "minimum": -180,
                            "maximum": 180,
                            "description": "Longitude"
                        }
                    },
                    "required": [
                        "lat",
                        "lng"
                    ],
                    "additionalProperties": false
                },
                "required": true,
                "leaf": false,
                "isList": false
            },
            {
                "name": "location.lat",
                "props": {
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90,
                    "description": "Latitude"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "location.lng",
                "props": {
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180,
                    "description": "Longitude"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "time_window",
                "props": {
                    "type": "object",
                    "properties": {
                        "start": {
                            "type": "string",
                            "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                        },
                        "end": {
                            "type": "string",
                            "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                        },
                        "strict": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                        }
                    },
                    "required": [
                        "start",
                        "end"
                    ],
                    "additionalProperties": false,
                    "description": "The range of time when a visit to the site is allowed."
                },
                "required": true,
                "leaf": false,
                "isList": false
            },
            {
                "name": "time_window.end",
                "props": {
                    "type": "string",
                    "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "time_window.start",
                "props": {
                    "type": "string",
                    "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "time_window.strict",
                "props": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "untimely_operations_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "default": 15,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per an event of untimely operations"
                        },
                        "per_early_minute": {
                            "type": "number",
                            "default": 0.25,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per a minute of early operations"
                        },
                        "per_late_minute": {
                            "type": "number",
                            "default": 0.25,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per a minute of late operations"
                        }
                    },
                    "additionalProperties": false,
                    "description": "Costs of untimely arrival to the site.\n\nWhen vehicle arrives to the site too early or too late in respect with the site time window, the corresponding cost is added to the overall cost of the route."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "untimely_operations_costs.per_early_minute",
                "props": {
                    "type": "number",
                    "default": 0.25,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per a minute of early operations"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "untimely_operations_costs.per_event",
                "props": {
                    "type": "number",
                    "default": 15,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per an event of untimely operations"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "untimely_operations_costs.per_late_minute",
                "props": {
                    "type": "number",
                    "default": 0.25,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per a minute of late operations"
                },
                "required": false,
                "leaf": true
            }
        ],
        "rootSchema": {
            "type": "object",
            "additionalProperties": {
                "title": "Site",
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "location": {
                                "description": "Geographic coordinate in WGS84 projection.",
                                "type": "object",
                                "properties": {
                                    "lat": {
                                        "type": "number",
                                        "minimum": -90,
                                        "maximum": 90,
                                        "description": "Latitude"
                                    },
                                    "lng": {
                                        "type": "number",
                                        "minimum": -180,
                                        "maximum": 180,
                                        "description": "Longitude"
                                    }
                                },
                                "required": [
                                    "lat",
                                    "lng"
                                ],
                                "additionalProperties": false
                            },
                            "time_window": {
                                "title": "TimeWindow",
                                "description": "The range of time when a visit to the site is allowed.",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "type": "string",
                                                "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                                            },
                                            "end": {
                                                "type": "string",
                                                "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                                            },
                                            "strict": {
                                                "type": "boolean",
                                                "default": false,
                                                "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                                            }
                                        },
                                        "required": [
                                            "start",
                                            "end"
                                        ],
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            "untimely_operations_costs": {
                                "title": "UntimelyOperationsCosts",
                                "description": "Costs of untimely arrival to the site.\n\nWhen vehicle arrives to the site too early or too late in respect with the site time window, the corresponding cost is added to the overall cost of the route.",
                                "allOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "per_event": {
                                                "type": "number",
                                                "default": 15,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per an event of untimely operations"
                                            },
                                            "per_early_minute": {
                                                "type": "number",
                                                "default": 0.25,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per a minute of early operations"
                                            },
                                            "per_late_minute": {
                                                "type": "number",
                                                "default": 0.25,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per a minute of late operations"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            "load": {
                                "type": "object",
                                "description": "Load at the site to be picked up or delivered by a vehicle",
                                "properties": {
                                    "volume": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                                    },
                                    "weight": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                                    },
                                    "count": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "title": "LoadCategory",
                                            "description": "Category or safety class of transported item."
                                        },
                                        "description": "Categories or safety classes of transported item.",
                                        "title": "LoadCategories"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "unperformed_cost": {
                                "type": "number",
                                "description": "Cost of non-performing a visit.",
                                "minimum": 0,
                                "default": 100000000
                            },
                            "duration": {
                                "type": "number",
                                "description": "Duration of the job, performed during the site visit, seconds.\n\nExample: time to handle goods or perform services during the site visit.",
                                "minimum": 0,
                                "default": 0
                            },
                            "preparing_duration": {
                                "type": "number",
                                "description": "Time before the job during the site visit, seconds.\n\nFor co-located sites, will only be accounted for the first site in sequence.\n\nExample: parking time or time for security clearance during site visit, which will happen once if several sites share the same geo coordinates and time window (\"co-located\").",
                                "minimum": 0,
                                "default": 0
                            },
                            "loading_duration": {
                                "type": "number",
                                "description": "Duration of loading the goods at the depot, seconds.\n\nWill be added to `depot.duration` to adjust time spent by vehicle at the depot.",
                                "minimum": 0,
                                "default": 0
                            },
                            "required_capabilities": {
                                "title": "CapabilitiesList",
                                "description": "Vehicle capabilities required on site.\n\nA site can require vehicle with certain characteristics, such as cold storage, or a tailgate lift. Multiple capabilities are allowed. See `fleet{}.capabilities`.",
                                "type": "array",
                                "items": {
                                    "title": "Capability",
                                    "type": "string"
                                },
                                "minItems": 1
                            },
                            "job": {
                                "type": "string",
                                "description": "Type of job performed at a site.\n\nFollowing types are supported:\n* `delivery` - goods are picked up at depot and delivered to this site;\n* `pickup` - goods are picked up at this site and delivered to the site specified in `deliver_to` field or to the depot at the end of the route.",
                                "enum": [
                                    "pickup",
                                    "delivery"
                                ],
                                "default": "delivery"
                            },
                            "deliver_to": {
                                "type": "string",
                                "description": "For `pickup` jobs, specifies `id` of destination site for delivery."
                            },
                            "same_route_key": {
                                "type": "string",
                                "description": "Ensure that sites with equal `same_route_key` will appear on the same route.\n\nNote that all unique `same_route_key` values must be also specified at `constraints.same_route_sites`."
                            }
                        },
                        "required": [
                            "location",
                            "time_window"
                        ],
                        "additionalProperties": false,
                        "description": "Site definition."
                    }
                ]
            },
            "description": "Sites to be visited."
        }
    },
    "fleet": {
        "sheetName": "Fleet",
        "fields": [
            {
                "name": "id",
                "props": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "required": true,
                "leaf": true,
                "isListId": true
            },
            {
                "name": "capabilities",
                "props": {
                    "title": "CapabilitiesArray",
                    "description": "Vehicle capabilities.\n\nOne or more vehicle characteristics, that could be required at a site, such as cold storage, or a tailgate lift.",
                    "type": "array",
                    "items": {
                        "title": "Capability",
                        "type": "string"
                    },
                    "minItems": 1
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "depot_id",
                "props": {
                    "type": "string",
                    "description": "Identifier of a depot where vehicle will start and optionally finish the route.\n\nIf `depot_id` is not defined and `depots` is defined, vehicle will start the route from the first depot in `depots` list.",
                    "minLength": 1
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "end_depot_id",
                "props": {
                    "type": "string",
                    "description": "Optional identifier of a depot, where vehicle will finish the route. \n\nCan be defined only if `depot_id` and `depots` are defined, otherwise will be ignored.",
                    "minLength": 1
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "roundtrip",
                "props": {
                    "type": "boolean",
                    "default": true,
                    "description": "Return vehicle to the depot at the end of the route.Will be taken into account only when depot is defined.\n\nSetting `roundtrip` to `false` will force a vehicle to finish the route at last visited site."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "capacity",
                "props": {
                    "type": "object",
                    "description": "Vehicle capacity",
                    "properties": {
                        "volume": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                        },
                        "weight": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                        },
                        "count": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                        }
                    },
                    "additionalProperties": false
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "capacity.count",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "capacity.volume",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "capacity.weight",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "costs",
                "props": {
                    "description": "Vehicle costs.\n\nCosts weights of a vehicle en route. Includes fixed and unit-dependent costs (per km, per hour, etc.). \n\nAdded to the total minimized solution cost as weighted linear combination of route statistical values (time, distance, etc.) and corresponding cost weights.",
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "default": 1000,
                            "description": "Cost of the vehicle, added to total route cost when vehicle is included in a route."
                        },
                        "per_hour": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "default": 10,
                            "description": "Cost for each hour of vehicle transit time"
                        },
                        "per_km": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "default": 15,
                            "description": "Cost for each kilometer of vehicle transit distance"
                        },
                        "per_site": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0.1,
                            "description": "Cost of visiting a site"
                        },
                        "per_kwh": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Cost of energy, used during transit to a site.\n\n**Note, that setting `per_kwh` cost requires cost matrix with `energy` dimension.**"
                        },
                        "moved_load": {
                            "type": "object",
                            "description": "Cost of moving a load over a distance in kilometers.\n\nThis cost component will force vehicles to deliver heavier load first, or pickup heavier load at the end of the route, maximizing vehicle energy efficiency (particularly for EV).\n\nNote, that vehicles capacity and load size should be specified using the same weight units as load moving costs.",
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "per_kgkm": {
                                            "type": "number",
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost of moving 1 kg over 1 km, kg⋅km."
                                        }
                                    },
                                    "required": [
                                        "per_kgkm"
                                    ],
                                    "additionalProperties": false
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "per_countkm": {
                                            "type": "number",
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost of moving 1 item over 1 km, items⋅km."
                                        }
                                    },
                                    "required": [
                                        "per_countkm"
                                    ],
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "additionalProperties": false
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "costs.per_event",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "default": 1000,
                    "description": "Cost of the vehicle, added to total route cost when vehicle is included in a route."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "costs.per_hour",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "default": 10,
                    "description": "Cost for each hour of vehicle transit time"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "costs.per_km",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "default": 15,
                    "description": "Cost for each kilometer of vehicle transit distance"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "costs.per_kwh",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Cost of energy, used during transit to a site.\n\n**Note, that setting `per_kwh` cost requires cost matrix with `energy` dimension.**"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "costs.per_site",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0.1,
                    "description": "Cost of visiting a site"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "costs.moved_load",
                "props": {
                    "type": "object",
                    "description": "Cost of moving a load over a distance in kilometers.\n\nThis cost component will force vehicles to deliver heavier load first, or pickup heavier load at the end of the route, maximizing vehicle energy efficiency (particularly for EV).\n\nNote, that vehicles capacity and load size should be specified using the same weight units as load moving costs.",
                    "oneOf": [
                        {
                            "type": "object",
                            "properties": {
                                "per_kgkm": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": true,
                                    "description": "Cost of moving 1 kg over 1 km, kg⋅km."
                                }
                            },
                            "required": [
                                "per_kgkm"
                            ],
                            "additionalProperties": false
                        },
                        {
                            "type": "object",
                            "properties": {
                                "per_countkm": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": true,
                                    "description": "Cost of moving 1 item over 1 km, items⋅km."
                                }
                            },
                            "required": [
                                "per_countkm"
                            ],
                            "additionalProperties": false
                        }
                    ]
                },
                "required": false,
                "leaf": false,
                "choice": [
                    {
                        "name": "costs.moved_load.per_kgkm",
                        "props": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost of moving 1 kg over 1 km, kg⋅km."
                        },
                        "required": true,
                        "leaf": true
                    },
                    {
                        "name": "costs.moved_load.per_countkm",
                        "props": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost of moving 1 item over 1 km, items⋅km."
                        },
                        "required": true,
                        "leaf": true
                    }
                ],
                "isChoice": true
            },
            {
                "name": "min_load",
                "props": {
                    "type": "object",
                    "description": "Mininum load allowed to be handled by the vehicle",
                    "properties": {
                        "volume": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                        },
                        "weight": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                        },
                        "count": {
                            "type": "number",
                            "minimum": 0,
                            "default": 0,
                            "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                        }
                    },
                    "additionalProperties": false
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "min_load.count",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "min_load.volume",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "min_load.weight",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "default": 0,
                    "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts",
                "props": {
                    "type": "object",
                    "additionalProperties": {
                        "title": "Shift",
                        "allOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "time_window": {
                                        "title": "TimeWindow",
                                        "description": "Time window of a vehicle shift.\n\nVehicle should finish the route and optionally return to depot by the end of defined shift time window.",
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "start": {
                                                        "type": "string",
                                                        "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                                                    },
                                                    "end": {
                                                        "type": "string",
                                                        "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                                                    },
                                                    "strict": {
                                                        "type": "boolean",
                                                        "default": false,
                                                        "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                                                    }
                                                },
                                                "required": [
                                                    "start",
                                                    "end"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "late_operations_costs": {
                                        "title": "LateOperationsCosts",
                                        "description": "Cost of late finish of a shift.\n\nAdded to total cost of the solution, when shift is finished later than specified shift time window. Does not apply when `time_window.strict = true`.",
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "per_event": {
                                                        "type": "number",
                                                        "default": 15,
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Cost per an event of late operations"
                                                    },
                                                    "per_late_minute": {
                                                        "type": "number",
                                                        "default": 0.25,
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Cost per a minute of late operations"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "stops_limit": {
                                        "title": "ShiftStopsLimit",
                                        "description": "Minimum number of site stops per each shift route.\n\nNote that co-located sites are accounted as one stop, and depot start and end is not counted.",
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "min": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "description": "Minumum number of stops a vehicle should made on the route. Note that co-located sites are counted as one stop, and depot start and end is not counted."
                                                    },
                                                    "failure_costs": {
                                                        "title": "StopsLimitFailureCosts",
                                                        "description": "Cost of having less than `stops_limit.min` stops in the route.\n\nAdded to total cost of the solution, when route has less than required number of stops.",
                                                        "allOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "per_event": {
                                                                        "type": "number",
                                                                        "default": 1000,
                                                                        "minimum": 0,
                                                                        "exclusiveMinimum": true,
                                                                        "description": "Cost per each shift violating the limit"
                                                                    },
                                                                    "per_stop": {
                                                                        "type": "number",
                                                                        "default": 100,
                                                                        "minimum": 0,
                                                                        "exclusiveMinimum": true,
                                                                        "description": "Cost per each stop violating the limit"
                                                                    }
                                                                },
                                                                "additionalProperties": false
                                                            }
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "min"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "distance_limit": {
                                        "title": "ShiftDistanceLimit",
                                        "description": "Maximum transit distance of the shift, meters.\n\nIn case when transit distance of a shift route exceeds defined limit, `distance_limit.failure_costs` are added to the total cost of the route proportionaly to excess distance.",
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "max": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "description": "Maximum transit distance of the route, meters."
                                                    },
                                                    "failure_costs": {
                                                        "title": "DistanceLimitFailureCosts",
                                                        "description": "Cost of violating maximum transit distance limit of the route (`distance_limit.max`).",
                                                        "allOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "per_event": {
                                                                        "type": "number",
                                                                        "default": 1000,
                                                                        "minimum": 0,
                                                                        "exclusiveMinimum": true,
                                                                        "description": "Cost per each shift violating the limit"
                                                                    },
                                                                    "per_m": {
                                                                        "type": "number",
                                                                        "default": 10,
                                                                        "minimum": 0,
                                                                        "exclusiveMinimum": true,
                                                                        "description": "Cost per each meter of transit distance, violating the limit"
                                                                    }
                                                                },
                                                                "additionalProperties": false
                                                            }
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "max"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "energy_limit": {
                                        "title": "ShiftEnergyLimit",
                                        "description": "Maximum transit energy of the shift, kWh.\n\nIn case when transit energy of a shift route exceeds defined limit, `energy_limit.failure_costs` are added to the total cost of the route proportionaly to excess energy.",
                                        "allOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "max": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "description": "Maximum transit energy of the route, kWh."
                                                    },
                                                    "failure_costs": {
                                                        "title": "EnergyLimitFailureCosts",
                                                        "description": "Cost of violating maximum transit energy limit of the route (`energy_limit.max`).",
                                                        "allOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "per_event": {
                                                                        "type": "number",
                                                                        "default": 1000,
                                                                        "minimum": 0,
                                                                        "exclusiveMinimum": true,
                                                                        "description": "Cost per each shift violating the limit"
                                                                    },
                                                                    "per_kwh": {
                                                                        "type": "number",
                                                                        "default": 100,
                                                                        "minimum": 0,
                                                                        "exclusiveMinimum": true,
                                                                        "description": "Cost per each kWh of transit energy, violating the limit"
                                                                    }
                                                                },
                                                                "additionalProperties": false
                                                            }
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "max"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "duration_limit": {
                                        "type": "number",
                                        "default": 0,
                                        "description": "Maximum duration of the shift, seconds.\n\nIn case when duration of the shift exceeds defined limit, `late_operations_costs` are added to the total cost of the route proportionaly to excess time."
                                    },
                                    "balance_key": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "A key to define group of shifts that will be balanced by total number of stops or total duration.\n\nSee `constraints.balanced_shifts`"
                                    },
                                    "gap": {
                                        "type": "number",
                                        "default": 0,
                                        "description": "Delay between consecutive shifts performed by a vehicle, seconds.\n\nThe `gap` value can be used to model fixed-time operations between the shifts, such as swapping the driver, or processing the paperwork at the depot."
                                    }
                                },
                                "required": [
                                    "time_window"
                                ],
                                "additionalProperties": false
                            }
                        ]
                    },
                    "description": "Vehicle shifts.\n\nA shift defines vehicle operational limits, such as time windows, duration and distance limits, balancing and others.\n\n**Note, that vehicle can make multiple depot roundtrips within a single shift time window,** which leads to duration and distance for multiple roundtrips being accumulated before checking the result against defined limits.\n\nIn order to limit distance or duration of a single roundtrip within a shift, create copies of the same shift object with a unique name."
                },
                "required": false,
                "leaf": false,
                "isList": true
            },
            {
                "name": "shifts.id",
                "props": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "required": true,
                "leaf": true,
                "isListId": true
            },
            {
                "name": "shifts.balance_key",
                "props": {
                    "type": "string",
                    "minLength": 1,
                    "description": "A key to define group of shifts that will be balanced by total number of stops or total duration.\n\nSee `constraints.balanced_shifts`"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.duration_limit",
                "props": {
                    "type": "number",
                    "default": 0,
                    "description": "Maximum duration of the shift, seconds.\n\nIn case when duration of the shift exceeds defined limit, `late_operations_costs` are added to the total cost of the route proportionaly to excess time."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.gap",
                "props": {
                    "type": "number",
                    "default": 0,
                    "description": "Delay between consecutive shifts performed by a vehicle, seconds.\n\nThe `gap` value can be used to model fixed-time operations between the shifts, such as swapping the driver, or processing the paperwork at the depot."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.distance_limit",
                "props": {
                    "type": "object",
                    "properties": {
                        "max": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Maximum transit distance of the route, meters."
                        },
                        "failure_costs": {
                            "title": "DistanceLimitFailureCosts",
                            "description": "Cost of violating maximum transit distance limit of the route (`distance_limit.max`).",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "per_event": {
                                            "type": "number",
                                            "default": 1000,
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost per each shift violating the limit"
                                        },
                                        "per_m": {
                                            "type": "number",
                                            "default": 10,
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost per each meter of transit distance, violating the limit"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "required": [
                        "max"
                    ],
                    "additionalProperties": false,
                    "description": "Maximum transit distance of the shift, meters.\n\nIn case when transit distance of a shift route exceeds defined limit, `distance_limit.failure_costs` are added to the total cost of the route proportionaly to excess distance."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "shifts.distance_limit.max",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Maximum transit distance of the route, meters."
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "shifts.distance_limit.failure_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "default": 1000,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each shift violating the limit"
                        },
                        "per_m": {
                            "type": "number",
                            "default": 10,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each meter of transit distance, violating the limit"
                        }
                    },
                    "additionalProperties": false,
                    "description": "Cost of violating maximum transit distance limit of the route (`distance_limit.max`)."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "shifts.distance_limit.failure_costs.per_event",
                "props": {
                    "type": "number",
                    "default": 1000,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each shift violating the limit"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.distance_limit.failure_costs.per_m",
                "props": {
                    "type": "number",
                    "default": 10,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each meter of transit distance, violating the limit"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.energy_limit",
                "props": {
                    "type": "object",
                    "properties": {
                        "max": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Maximum transit energy of the route, kWh."
                        },
                        "failure_costs": {
                            "title": "EnergyLimitFailureCosts",
                            "description": "Cost of violating maximum transit energy limit of the route (`energy_limit.max`).",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "per_event": {
                                            "type": "number",
                                            "default": 1000,
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost per each shift violating the limit"
                                        },
                                        "per_kwh": {
                                            "type": "number",
                                            "default": 100,
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost per each kWh of transit energy, violating the limit"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "required": [
                        "max"
                    ],
                    "additionalProperties": false,
                    "description": "Maximum transit energy of the shift, kWh.\n\nIn case when transit energy of a shift route exceeds defined limit, `energy_limit.failure_costs` are added to the total cost of the route proportionaly to excess energy."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "shifts.energy_limit.max",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Maximum transit energy of the route, kWh."
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "shifts.energy_limit.failure_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "default": 1000,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each shift violating the limit"
                        },
                        "per_kwh": {
                            "type": "number",
                            "default": 100,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each kWh of transit energy, violating the limit"
                        }
                    },
                    "additionalProperties": false,
                    "description": "Cost of violating maximum transit energy limit of the route (`energy_limit.max`)."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "shifts.energy_limit.failure_costs.per_event",
                "props": {
                    "type": "number",
                    "default": 1000,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each shift violating the limit"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.energy_limit.failure_costs.per_kwh",
                "props": {
                    "type": "number",
                    "default": 100,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each kWh of transit energy, violating the limit"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.late_operations_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "default": 15,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per an event of late operations"
                        },
                        "per_late_minute": {
                            "type": "number",
                            "default": 0.25,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per a minute of late operations"
                        }
                    },
                    "additionalProperties": false,
                    "description": "Cost of late finish of a shift.\n\nAdded to total cost of the solution, when shift is finished later than specified shift time window. Does not apply when `time_window.strict = true`."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "shifts.late_operations_costs.per_event",
                "props": {
                    "type": "number",
                    "default": 15,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per an event of late operations"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.late_operations_costs.per_late_minute",
                "props": {
                    "type": "number",
                    "default": 0.25,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per a minute of late operations"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.stops_limit",
                "props": {
                    "type": "object",
                    "properties": {
                        "min": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Minumum number of stops a vehicle should made on the route. Note that co-located sites are counted as one stop, and depot start and end is not counted."
                        },
                        "failure_costs": {
                            "title": "StopsLimitFailureCosts",
                            "description": "Cost of having less than `stops_limit.min` stops in the route.\n\nAdded to total cost of the solution, when route has less than required number of stops.",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "per_event": {
                                            "type": "number",
                                            "default": 1000,
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost per each shift violating the limit"
                                        },
                                        "per_stop": {
                                            "type": "number",
                                            "default": 100,
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost per each stop violating the limit"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "required": [
                        "min"
                    ],
                    "additionalProperties": false,
                    "description": "Minimum number of site stops per each shift route.\n\nNote that co-located sites are accounted as one stop, and depot start and end is not counted."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "shifts.stops_limit.min",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Minumum number of stops a vehicle should made on the route. Note that co-located sites are counted as one stop, and depot start and end is not counted."
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "shifts.stops_limit.failure_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "default": 1000,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each shift violating the limit"
                        },
                        "per_stop": {
                            "type": "number",
                            "default": 100,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each stop violating the limit"
                        }
                    },
                    "additionalProperties": false,
                    "description": "Cost of having less than `stops_limit.min` stops in the route.\n\nAdded to total cost of the solution, when route has less than required number of stops."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "shifts.stops_limit.failure_costs.per_event",
                "props": {
                    "type": "number",
                    "default": 1000,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each shift violating the limit"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.stops_limit.failure_costs.per_stop",
                "props": {
                    "type": "number",
                    "default": 100,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each stop violating the limit"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "shifts.time_window",
                "props": {
                    "type": "object",
                    "properties": {
                        "start": {
                            "type": "string",
                            "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                        },
                        "end": {
                            "type": "string",
                            "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                        },
                        "strict": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                        }
                    },
                    "required": [
                        "start",
                        "end"
                    ],
                    "additionalProperties": false,
                    "description": "Time window of a vehicle shift.\n\nVehicle should finish the route and optionally return to depot by the end of defined shift time window."
                },
                "required": true,
                "leaf": false,
                "isList": false
            },
            {
                "name": "shifts.time_window.end",
                "props": {
                    "type": "string",
                    "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "shifts.time_window.start",
                "props": {
                    "type": "string",
                    "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "shifts.time_window.strict",
                "props": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                },
                "required": false,
                "leaf": true
            }
        ],
        "rootSchema": {
            "type": "object",
            "additionalProperties": {
                "title": "Vehicle",
                "allOf": [
                    {
                        "description": "Vehicle definition.",
                        "type": "object",
                        "properties": {
                            "costs": {
                                "description": "Vehicle costs.\n\nCosts weights of a vehicle en route. Includes fixed and unit-dependent costs (per km, per hour, etc.). \n\nAdded to the total minimized solution cost as weighted linear combination of route statistical values (time, distance, etc.) and corresponding cost weights.",
                                "type": "object",
                                "properties": {
                                    "per_event": {
                                        "type": "number",
                                        "minimum": 0,
                                        "exclusiveMinimum": true,
                                        "default": 1000,
                                        "description": "Cost of the vehicle, added to total route cost when vehicle is included in a route."
                                    },
                                    "per_hour": {
                                        "type": "number",
                                        "minimum": 0,
                                        "exclusiveMinimum": true,
                                        "default": 10,
                                        "description": "Cost for each hour of vehicle transit time"
                                    },
                                    "per_km": {
                                        "type": "number",
                                        "minimum": 0,
                                        "exclusiveMinimum": true,
                                        "default": 15,
                                        "description": "Cost for each kilometer of vehicle transit distance"
                                    },
                                    "per_site": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0.1,
                                        "description": "Cost of visiting a site"
                                    },
                                    "per_kwh": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Cost of energy, used during transit to a site.\n\n**Note, that setting `per_kwh` cost requires cost matrix with `energy` dimension.**"
                                    },
                                    "moved_load": {
                                        "type": "object",
                                        "description": "Cost of moving a load over a distance in kilometers.\n\nThis cost component will force vehicles to deliver heavier load first, or pickup heavier load at the end of the route, maximizing vehicle energy efficiency (particularly for EV).\n\nNote, that vehicles capacity and load size should be specified using the same weight units as load moving costs.",
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "per_kgkm": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Cost of moving 1 kg over 1 km, kg⋅km."
                                                    }
                                                },
                                                "required": [
                                                    "per_kgkm"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "per_countkm": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Cost of moving 1 item over 1 km, items⋅km."
                                                    }
                                                },
                                                "required": [
                                                    "per_countkm"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    }
                                },
                                "additionalProperties": false
                            },
                            "shifts": {
                                "type": "object",
                                "additionalProperties": {
                                    "title": "Shift",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "time_window": {
                                                    "title": "TimeWindow",
                                                    "description": "Time window of a vehicle shift.\n\nVehicle should finish the route and optionally return to depot by the end of defined shift time window.",
                                                    "allOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "start": {
                                                                    "type": "string",
                                                                    "description": "Time window start in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                                                                },
                                                                "end": {
                                                                    "type": "string",
                                                                    "description": "Time window end in 24-hour ISO 8601 time format (`hh`, `hh:mm`, `hh:mm:ss`).\n\nAll times must be specified in the same time zone. To specify time window on the next day after the planning date, use `1+` prefix.\n\nExamples:\n`10:30:00`\n`10:30`\n`10`\n`1+10:30` (10:30 on the next day following the planning date)"
                                                                },
                                                                "strict": {
                                                                    "type": "boolean",
                                                                    "default": false,
                                                                    "description": "Indicates that time window can not be failed, i.e. late or early arrival is not possible."
                                                                }
                                                            },
                                                            "required": [
                                                                "start",
                                                                "end"
                                                            ],
                                                            "additionalProperties": false
                                                        }
                                                    ]
                                                },
                                                "late_operations_costs": {
                                                    "title": "LateOperationsCosts",
                                                    "description": "Cost of late finish of a shift.\n\nAdded to total cost of the solution, when shift is finished later than specified shift time window. Does not apply when `time_window.strict = true`.",
                                                    "allOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "per_event": {
                                                                    "type": "number",
                                                                    "default": 15,
                                                                    "minimum": 0,
                                                                    "exclusiveMinimum": true,
                                                                    "description": "Cost per an event of late operations"
                                                                },
                                                                "per_late_minute": {
                                                                    "type": "number",
                                                                    "default": 0.25,
                                                                    "minimum": 0,
                                                                    "exclusiveMinimum": true,
                                                                    "description": "Cost per a minute of late operations"
                                                                }
                                                            },
                                                            "additionalProperties": false
                                                        }
                                                    ]
                                                },
                                                "stops_limit": {
                                                    "title": "ShiftStopsLimit",
                                                    "description": "Minimum number of site stops per each shift route.\n\nNote that co-located sites are accounted as one stop, and depot start and end is not counted.",
                                                    "allOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "min": {
                                                                    "type": "number",
                                                                    "minimum": 0,
                                                                    "description": "Minumum number of stops a vehicle should made on the route. Note that co-located sites are counted as one stop, and depot start and end is not counted."
                                                                },
                                                                "failure_costs": {
                                                                    "title": "StopsLimitFailureCosts",
                                                                    "description": "Cost of having less than `stops_limit.min` stops in the route.\n\nAdded to total cost of the solution, when route has less than required number of stops.",
                                                                    "allOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "per_event": {
                                                                                    "type": "number",
                                                                                    "default": 1000,
                                                                                    "minimum": 0,
                                                                                    "exclusiveMinimum": true,
                                                                                    "description": "Cost per each shift violating the limit"
                                                                                },
                                                                                "per_stop": {
                                                                                    "type": "number",
                                                                                    "default": 100,
                                                                                    "minimum": 0,
                                                                                    "exclusiveMinimum": true,
                                                                                    "description": "Cost per each stop violating the limit"
                                                                                }
                                                                            },
                                                                            "additionalProperties": false
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "min"
                                                            ],
                                                            "additionalProperties": false
                                                        }
                                                    ]
                                                },
                                                "distance_limit": {
                                                    "title": "ShiftDistanceLimit",
                                                    "description": "Maximum transit distance of the shift, meters.\n\nIn case when transit distance of a shift route exceeds defined limit, `distance_limit.failure_costs` are added to the total cost of the route proportionaly to excess distance.",
                                                    "allOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "max": {
                                                                    "type": "number",
                                                                    "minimum": 0,
                                                                    "description": "Maximum transit distance of the route, meters."
                                                                },
                                                                "failure_costs": {
                                                                    "title": "DistanceLimitFailureCosts",
                                                                    "description": "Cost of violating maximum transit distance limit of the route (`distance_limit.max`).",
                                                                    "allOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "per_event": {
                                                                                    "type": "number",
                                                                                    "default": 1000,
                                                                                    "minimum": 0,
                                                                                    "exclusiveMinimum": true,
                                                                                    "description": "Cost per each shift violating the limit"
                                                                                },
                                                                                "per_m": {
                                                                                    "type": "number",
                                                                                    "default": 10,
                                                                                    "minimum": 0,
                                                                                    "exclusiveMinimum": true,
                                                                                    "description": "Cost per each meter of transit distance, violating the limit"
                                                                                }
                                                                            },
                                                                            "additionalProperties": false
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "max"
                                                            ],
                                                            "additionalProperties": false
                                                        }
                                                    ]
                                                },
                                                "energy_limit": {
                                                    "title": "ShiftEnergyLimit",
                                                    "description": "Maximum transit energy of the shift, kWh.\n\nIn case when transit energy of a shift route exceeds defined limit, `energy_limit.failure_costs` are added to the total cost of the route proportionaly to excess energy.",
                                                    "allOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "max": {
                                                                    "type": "number",
                                                                    "minimum": 0,
                                                                    "description": "Maximum transit energy of the route, kWh."
                                                                },
                                                                "failure_costs": {
                                                                    "title": "EnergyLimitFailureCosts",
                                                                    "description": "Cost of violating maximum transit energy limit of the route (`energy_limit.max`).",
                                                                    "allOf": [
                                                                        {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "per_event": {
                                                                                    "type": "number",
                                                                                    "default": 1000,
                                                                                    "minimum": 0,
                                                                                    "exclusiveMinimum": true,
                                                                                    "description": "Cost per each shift violating the limit"
                                                                                },
                                                                                "per_kwh": {
                                                                                    "type": "number",
                                                                                    "default": 100,
                                                                                    "minimum": 0,
                                                                                    "exclusiveMinimum": true,
                                                                                    "description": "Cost per each kWh of transit energy, violating the limit"
                                                                                }
                                                                            },
                                                                            "additionalProperties": false
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "max"
                                                            ],
                                                            "additionalProperties": false
                                                        }
                                                    ]
                                                },
                                                "duration_limit": {
                                                    "type": "number",
                                                    "default": 0,
                                                    "description": "Maximum duration of the shift, seconds.\n\nIn case when duration of the shift exceeds defined limit, `late_operations_costs` are added to the total cost of the route proportionaly to excess time."
                                                },
                                                "balance_key": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "description": "A key to define group of shifts that will be balanced by total number of stops or total duration.\n\nSee `constraints.balanced_shifts`"
                                                },
                                                "gap": {
                                                    "type": "number",
                                                    "default": 0,
                                                    "description": "Delay between consecutive shifts performed by a vehicle, seconds.\n\nThe `gap` value can be used to model fixed-time operations between the shifts, such as swapping the driver, or processing the paperwork at the depot."
                                                }
                                            },
                                            "required": [
                                                "time_window"
                                            ],
                                            "additionalProperties": false
                                        }
                                    ]
                                },
                                "description": "Vehicle shifts.\n\nA shift defines vehicle operational limits, such as time windows, duration and distance limits, balancing and others.\n\n**Note, that vehicle can make multiple depot roundtrips within a single shift time window,** which leads to duration and distance for multiple roundtrips being accumulated before checking the result against defined limits.\n\nIn order to limit distance or duration of a single roundtrip within a shift, create copies of the same shift object with a unique name."
                            },
                            "capacity": {
                                "type": "object",
                                "description": "Vehicle capacity",
                                "properties": {
                                    "volume": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                                    },
                                    "weight": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                                    },
                                    "count": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                                    }
                                },
                                "additionalProperties": false
                            },
                            "min_load": {
                                "type": "object",
                                "description": "Mininum load allowed to be handled by the vehicle",
                                "properties": {
                                    "volume": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                                    },
                                    "weight": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."
                                    },
                                    "count": {
                                        "type": "number",
                                        "minimum": 0,
                                        "default": 0,
                                        "description": "Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."
                                    }
                                },
                                "additionalProperties": false
                            },
                            "capabilities": {
                                "title": "CapabilitiesArray",
                                "description": "Vehicle capabilities.\n\nOne or more vehicle characteristics, that could be required at a site, such as cold storage, or a tailgate lift.",
                                "type": "array",
                                "items": {
                                    "title": "Capability",
                                    "type": "string"
                                },
                                "minItems": 1
                            },
                            "roundtrip": {
                                "type": "boolean",
                                "default": true,
                                "description": "Return vehicle to the depot at the end of the route.Will be taken into account only when depot is defined.\n\nSetting `roundtrip` to `false` will force a vehicle to finish the route at last visited site."
                            },
                            "depot_id": {
                                "type": "string",
                                "description": "Identifier of a depot where vehicle will start and optionally finish the route.\n\nIf `depot_id` is not defined and `depots` is defined, vehicle will start the route from the first depot in `depots` list.",
                                "minLength": 1
                            },
                            "end_depot_id": {
                                "type": "string",
                                "description": "Optional identifier of a depot, where vehicle will finish the route. \n\nCan be defined only if `depot_id` and `depots` are defined, otherwise will be ignored.",
                                "minLength": 1
                            }
                        },
                        "additionalProperties": false
                    }
                ]
            },
            "description": "Fleet of available vehicles to visit sites."
        }
    },
    "options": {
        "sheetName": "Options",
        "fields": [
            {
                "name": "date",
                "props": {
                    "type": "string",
                    "description": "Route planning date in ISO 8601 format (`yyyy-MM-dd`), will be appended to all time windows.\n\nExample:\n`2020-09-01`"
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "matrix",
                "props": {
                    "type": "string",
                    "default": "osrm",
                    "description": "Transit distance and duration, can take one of the following values:\n\n`here` - use HERE Large Matrix API (must be enabled for user account);\n`osrm` - (default) use OpenStreetMap and Open Source Routing Machine without traffic;\n\nOther types of transit matrices and traffic support is available only via API."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "quality",
                "props": {
                    "type": "string",
                    "default": "normal",
                    "description": "Route planning quality, can take one of the following values:\n\n- `debug` - quick optimization mode, recommended for request debugging and data integrity validation;\n- `normal` - (default) regular quality of optimization;\n- `high` - high quality of optimization (incurs additional cost and waiting time);\n"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "timezone",
                "props": {
                    "type": "string",
                    "default": "UTC",
                    "description": "Time zone of all time windows in IANA format.\n\nExamples:\n`UTC`\n`UTC+5`\n`Europe/Berlin`\n`Asia/Dubai`\n`America/Los_Angeles`"
                },
                "required": false,
                "leaf": true
            }
        ],
        "rootSchema": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Route planning date in ISO 8601 format (`yyyy-MM-dd`), will be appended to all time windows.\n\nExample:\n`2020-09-01`"
                },
                "timezone": {
                    "type": "string",
                    "default": "UTC",
                    "description": "Time zone of all time windows in IANA format.\n\nExamples:\n`UTC`\n`UTC+5`\n`Europe/Berlin`\n`Asia/Dubai`\n`America/Los_Angeles`"
                },
                "quality": {
                    "type": "string",
                    "default": "normal",
                    "description": "Route planning quality, can take one of the following values:\n\n- `debug` - quick optimization mode, recommended for request debugging and data integrity validation;\n- `normal` - (default) regular quality of optimization;\n- `high` - high quality of optimization (incurs additional cost and waiting time);\n"
                },
                "matrix": {
                    "type": "string",
                    "default": "osrm",
                    "description": "Transit distance and duration, can take one of the following values:\n\n`here` - use HERE Large Matrix API (must be enabled for user account);\n`osrm` - (default) use OpenStreetMap and Open Source Routing Machine without traffic;\n\nOther types of transit matrices and traffic support is available only via API."
                }
            },
            "additionalProperties": false,
            "required": [
                "date"
            ]
        }
    },
    "constraints": {
        "sheetName": "Constraints",
        "fields": [
            {
                "name": "load_category_restrictions",
                "props": {
                    "type": "array",
                    "description": "Defines lists of restricted load categories combinations, which can not be transported in any vehicle at the same time during the route. \n\nLoad categories defined here should be specified at site definition, see `sites{}.load.category` field.",
                    "title": "LoadCategoriesRestrictionsLists",
                    "items": {
                        "type": "array",
                        "title": "LoadCategoriesRestrictions",
                        "items": {
                            "type": "string",
                            "title": "LoadCategory",
                            "description": "Category or safety class of transported item."
                        }
                    }
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "balanced_shifts",
                "props": {
                    "type": "object",
                    "additionalProperties": {
                        "title": "BalancedShifts",
                        "allOf": [
                            {
                                "description": "Balanced vehicle shifts definition.\n\nTo include vehicle shift into the group, specify id of the group in `fleet{}.shifts{}.balance_key`.",
                                "type": "object",
                                "properties": {
                                    "failure_costs": {
                                        "title": "BalancedShiftsCosts",
                                        "description": "Costs of balancing shifts by total number stops or total shift duration.",
                                        "type": "object",
                                        "properties": {
                                            "per_hour": {
                                                "type": "number",
                                                "default": 3,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Balances shifts in the group by total duration.\n\nDefines the cost per each hour of Root Sum Squared (RSS) difference between the duration of a shift and average duration of other balanced shifts."
                                            },
                                            "per_stop": {
                                                "type": "number",
                                                "default": 1,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Balances shifts in the group by total number of stops.\n\nDefines the cost per each stop in Route Sum Squared (RSS) difference between the number of stops in a shift and average number of stops in other balanced shifts."
                                            }
                                        }
                                    }
                                },
                                "additionalProperties": false
                            }
                        ]
                    },
                    "description": "Vehicle shifts balancing.\n\nEnables balancing of selected vehicles shifts by total duration or number of stops.\n\nA balancing key defined here should be referred at vehicle shift definition to enable route balancing for the shift, see `fleet{}.shifts{}.balancing_key`"
                },
                "required": false,
                "leaf": false,
                "isList": true
            },
            {
                "name": "balanced_shifts.id",
                "props": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "required": true,
                "leaf": true,
                "isListId": true
            },
            {
                "name": "balanced_shifts.failure_costs",
                "props": {
                    "title": "BalancedShiftsCosts",
                    "description": "Costs of balancing shifts by total number stops or total shift duration.",
                    "type": "object",
                    "properties": {
                        "per_hour": {
                            "type": "number",
                            "default": 3,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Balances shifts in the group by total duration.\n\nDefines the cost per each hour of Root Sum Squared (RSS) difference between the duration of a shift and average duration of other balanced shifts."
                        },
                        "per_stop": {
                            "type": "number",
                            "default": 1,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Balances shifts in the group by total number of stops.\n\nDefines the cost per each stop in Route Sum Squared (RSS) difference between the number of stops in a shift and average number of stops in other balanced shifts."
                        }
                    }
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "balanced_shifts.failure_costs.per_hour",
                "props": {
                    "type": "number",
                    "default": 3,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Balances shifts in the group by total duration.\n\nDefines the cost per each hour of Root Sum Squared (RSS) difference between the duration of a shift and average duration of other balanced shifts."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "balanced_shifts.failure_costs.per_stop",
                "props": {
                    "type": "number",
                    "default": 1,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Balances shifts in the group by total number of stops.\n\nDefines the cost per each stop in Route Sum Squared (RSS) difference between the number of stops in a shift and average number of stops in other balanced shifts."
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "employed_vehicles_limit",
                "props": {
                    "type": "object",
                    "properties": {
                        "min": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Minumum number of vehicles to employ."
                        },
                        "failure_costs": {
                            "title": "VehiclesLimitFailureCosts",
                            "description": "Cost of employing less than a minimum number of vehicles.",
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "per_event": {
                                            "type": "number",
                                            "default": 1000,
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost per an event of constraint failure"
                                        },
                                        "per_vehicle": {
                                            "type": "number",
                                            "default": 1000,
                                            "minimum": 0,
                                            "exclusiveMinimum": true,
                                            "description": "Cost per each vehicle not satisfying the constraint"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "min"
                    ],
                    "description": "Limit the number of employed vehicles."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "employed_vehicles_limit.min",
                "props": {
                    "type": "number",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Minumum number of vehicles to employ."
                },
                "required": true,
                "leaf": true
            },
            {
                "name": "employed_vehicles_limit.failure_costs",
                "props": {
                    "type": "object",
                    "properties": {
                        "per_event": {
                            "type": "number",
                            "default": 1000,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per an event of constraint failure"
                        },
                        "per_vehicle": {
                            "type": "number",
                            "default": 1000,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each vehicle not satisfying the constraint"
                        }
                    },
                    "additionalProperties": false,
                    "description": "Cost of employing less than a minimum number of vehicles."
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "employed_vehicles_limit.failure_costs.per_event",
                "props": {
                    "type": "number",
                    "default": 1000,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per an event of constraint failure"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "employed_vehicles_limit.failure_costs.per_vehicle",
                "props": {
                    "type": "number",
                    "default": 1000,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each vehicle not satisfying the constraint"
                },
                "required": false,
                "leaf": true
            },
            {
                "name": "same_route_sites",
                "props": {
                    "type": "object",
                    "additionalProperties": {
                        "title": "SameRoute",
                        "allOf": [
                            {
                                "description": "Same route site group definition.\n\nTo include site into the group, specify id of the group in `sites{}.same_route_key`.",
                                "type": "object",
                                "properties": {
                                    "failure_costs": {
                                        "title": "SameRouteFailureCosts",
                                        "description": "Costs of failing to have all group sites on the same route.",
                                        "type": "object",
                                        "properties": {
                                            "per_site": {
                                                "type": "number",
                                                "default": 10,
                                                "minimum": 0,
                                                "exclusiveMinimum": true,
                                                "description": "Cost per each site in the group failing the constraint."
                                            }
                                        }
                                    }
                                },
                                "additionalProperties": false
                            }
                        ]
                    },
                    "description": "Same route sites groups.\n\nEnforces group of sites to appear on the same route.\n\nA group key defined here should be referred at site definition to enable the same route requirement, see `sites{}.same_route_key`"
                },
                "required": false,
                "leaf": false,
                "isList": true
            },
            {
                "name": "same_route_sites.id",
                "props": {
                    "type": "string",
                    "description": "Unique identifier"
                },
                "required": true,
                "leaf": true,
                "isListId": true
            },
            {
                "name": "same_route_sites.failure_costs",
                "props": {
                    "title": "SameRouteFailureCosts",
                    "description": "Costs of failing to have all group sites on the same route.",
                    "type": "object",
                    "properties": {
                        "per_site": {
                            "type": "number",
                            "default": 10,
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "Cost per each site in the group failing the constraint."
                        }
                    }
                },
                "required": false,
                "leaf": false,
                "isList": false
            },
            {
                "name": "same_route_sites.failure_costs.per_site",
                "props": {
                    "type": "number",
                    "default": 10,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Cost per each site in the group failing the constraint."
                },
                "required": false,
                "leaf": true
            }
        ],
        "rootSchema": {
            "type": "object",
            "additionalProperties": false,
            "description": "Constraints applied to all vehicles in the fleet or to all defined sites",
            "properties": {
                "employed_vehicles_limit": {
                    "title": "EmployedVehiclesLimit",
                    "description": "Limit the number of employed vehicles.",
                    "allOf": [
                        {
                            "type": "object",
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": true,
                                    "description": "Minumum number of vehicles to employ."
                                },
                                "failure_costs": {
                                    "title": "VehiclesLimitFailureCosts",
                                    "description": "Cost of employing less than a minimum number of vehicles.",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "per_event": {
                                                    "type": "number",
                                                    "default": 1000,
                                                    "minimum": 0,
                                                    "exclusiveMinimum": true,
                                                    "description": "Cost per an event of constraint failure"
                                                },
                                                "per_vehicle": {
                                                    "type": "number",
                                                    "default": 1000,
                                                    "minimum": 0,
                                                    "exclusiveMinimum": true,
                                                    "description": "Cost per each vehicle not satisfying the constraint"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "min"
                            ]
                        }
                    ]
                },
                "balanced_shifts": {
                    "title": "BalancedShiftsDictionary",
                    "description": "Vehicle shifts balancing.\n\nEnables balancing of selected vehicles shifts by total duration or number of stops.\n\nA balancing key defined here should be referred at vehicle shift definition to enable route balancing for the shift, see `fleet{}.shifts{}.balancing_key`",
                    "allOf": [
                        {
                            "type": "object",
                            "additionalProperties": {
                                "title": "BalancedShifts",
                                "allOf": [
                                    {
                                        "description": "Balanced vehicle shifts definition.\n\nTo include vehicle shift into the group, specify id of the group in `fleet{}.shifts{}.balance_key`.",
                                        "type": "object",
                                        "properties": {
                                            "failure_costs": {
                                                "title": "BalancedShiftsCosts",
                                                "description": "Costs of balancing shifts by total number stops or total shift duration.",
                                                "type": "object",
                                                "properties": {
                                                    "per_hour": {
                                                        "type": "number",
                                                        "default": 3,
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Balances shifts in the group by total duration.\n\nDefines the cost per each hour of Root Sum Squared (RSS) difference between the duration of a shift and average duration of other balanced shifts."
                                                    },
                                                    "per_stop": {
                                                        "type": "number",
                                                        "default": 1,
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Balances shifts in the group by total number of stops.\n\nDefines the cost per each stop in Route Sum Squared (RSS) difference between the number of stops in a shift and average number of stops in other balanced shifts."
                                                    }
                                                }
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            "description": "Vehicles shifts balancing"
                        }
                    ]
                },
                "same_route_sites": {
                    "title": "SameRouteSitesDictionary",
                    "description": "Same route sites groups.\n\nEnforces group of sites to appear on the same route.\n\nA group key defined here should be referred at site definition to enable the same route requirement, see `sites{}.same_route_key`",
                    "allOf": [
                        {
                            "type": "object",
                            "additionalProperties": {
                                "title": "SameRoute",
                                "allOf": [
                                    {
                                        "description": "Same route site group definition.\n\nTo include site into the group, specify id of the group in `sites{}.same_route_key`.",
                                        "type": "object",
                                        "properties": {
                                            "failure_costs": {
                                                "title": "SameRouteFailureCosts",
                                                "description": "Costs of failing to have all group sites on the same route.",
                                                "type": "object",
                                                "properties": {
                                                    "per_site": {
                                                        "type": "number",
                                                        "default": 10,
                                                        "minimum": 0,
                                                        "exclusiveMinimum": true,
                                                        "description": "Cost per each site in the group failing the constraint."
                                                    }
                                                }
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                ]
                            },
                            "description": "Groups of sites to appear on the same route"
                        }
                    ]
                },
                "load_category_restrictions": {
                    "type": "array",
                    "description": "Defines lists of restricted load categories combinations, which can not be transported in any vehicle at the same time during the route. \n\nLoad categories defined here should be specified at site definition, see `sites{}.load.category` field.",
                    "title": "LoadCategoriesRestrictionsLists",
                    "items": {
                        "type": "array",
                        "title": "LoadCategoriesRestrictions",
                        "items": {
                            "type": "string",
                            "title": "LoadCategory",
                            "description": "Category or safety class of transported item."
                        }
                    }
                }
            }
        }
    }
}