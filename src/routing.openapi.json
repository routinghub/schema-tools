{"openapi":"3.0.0","info":{"title":"Routing API","version":"v1","description":"\n# Introduction\n\nRoutinghub Routing API provides capabilities to create optimized routes\nfor a fleet of vehicles, taking into account various business rules, such\nas vehicle capacity or time windows, as well as external factors such as\nroad traffic.\n\nThe API supports a wide range of real-world business rules and constraints\nthat can be mapped to same-day or next-day delivery or distribution operations\nat last and middle mile.\n\nThe API object model is built with optional blocks, which allows modelling\nof transport operations for various business verticals and use cases, not\nlimited to goods delivery or distribution.\n\nThis documentation is generated automatically from [service OpenAPI 3.0 JSON schema](/api/routing/v1-devel/schemas/openapi.json).\n\n# Quick start\n\nIn case you are already familiar with the main concepts of route optimization\nand [Vehicle Routing Problem](https://en.wikipedia.org/wiki/Vehicle_routing_problem),\nthe [Common definitions](#section/Common-definitions) secion of this documentation\ncovers main concepts and terms used in the API. \n\nPlease see our public GitHub repository for example client and VRP tasks in JSON format:\nhttps://github.com/routinghub/vrs-examples\n\nFor complete reference of API request and response formats, please see [interactive\ndocumentation for API methods](#tag/routing).\n\nThe OpenAPI 3.0 JSON Schema for the service is fully compatible with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator)\nwhich can be used to generate API client in your development language from service OpenAPI schema.\n\n# Common definitions\n\n## Routing Problem\nRouting Problem is a user-defined set of [vehicles](#section/Common-definitions/Vehicle), \n[sites](#section/Common-definitions/Site), and constraints, that altogether represent\nan operational scenario for optimization. \n\n## Routing Solution\nRouting Solution is a set of optimized vehicle routes, created from a\nuser-defined Routing Problem.\n\nA vehicle route is a sequence of [site](#section/Common-definitions/Site) visits, \nthat is created by optimization engine such that all constraints and rules are\nfulfilled, and [total cost](#section/Common-definitions/Cost) of transportation is minimized.\n\n## Cost\n\nWhen building a [routing solution](#section/Common-definitions/Routing-Solution), the\noptimization engine minimizes the total cost of transport operations, which is defined as\na weighted sum of total transit cost for all routes, and constraints violations costs.\n\nThere are two types of vehicle and soft constraints violations costs that\nare used in the API: \n\n- A **fixed cost** is added to the total cost once on soft constraint violation\nor when new vehicle is added to Routing Solution;\n\n- A **weighted cost** expresses how much a constraint was violated - for instance, \nhow late a vehicle has arrived at a site after the time window end, or how\nmuch the driver exceeded maximum working hours. In terms of vehicle costs, weighted\ncost is transit distance and total time, each multiplied by a cost coefficient to allow\nbalancing between distance and time minimization. \n\n<div class=\"doc-note\">\n\nDuring optimization, the engine minimizes vehicle costs together with\nconstraint violation costs. The optimization process does not differentiate which\nconstraint has been violated, or which vehicle cost component contributes\nto the total cost, and instead compares only the absolute cost values of individual\nroutes, or total sum of all costs of all routes and constraints.\n\nThis approach allows optimization of complex, multi-objective optimization\nproblems with mixed soft and hard constraints and complex relationships.\n\nIn specialized decision-making software, such an approach is commonly referred\nto as the [Weighted Sum Model (WSM)](https://en.wikipedia.org/wiki/Weighted_sum_model). \n</div>\n\n\n## Soft and hard constraints\n\nThe routing problem submitted for optimization may define certain business rules,\nor constraints, which can take one of the following types: \n- **hard constraint**, when violation is not possible at any cost;\n- **soft constraint**, when violation is logically possible but should be avoided and penalized, depending on the violation value;\n\nDepending on the particular use case, both soft and hard constraints can be useful\nto model required scenarios.\n\n<div class=\"doc-note\">\n\nFor example, a [time window](#section/Common-definitions/Time-window) is normally defined\nas a **strict constraint**, such that late or early arrivals to a site are not allowed.\n\nHowever in situations when the [load to be delivered](#section/Common-definitions/Load-and-capacity)\nis significantly over the available fleet [capacity](#section/Common-definitions/Load-and-capacity),\nsmall lateness (time window violation) can be tolerated to handle additional load.\n\nIn this case, a time window can be used as a soft constraint, with a carefully\nbalanced value of **violation cost** to permit only a certain percentage of violations. \nThe **violation cost** for soft time windows is each minute of late or early arrival at a site,\nmultiplied by user-defined constant, that will be compared with other cost components and\nminimized as a part of total cost.\n</div>\n\n## Unserved sites\n\nUnserved sites are sites which were not allocated to any vehicle in the\nrouting solution. \n\nThere are several reasons why a site may become unserved, which are reported\nback to user in the API response for further analysis:\n- Hard constraint violation, e.g. incompatibility between provided vehicles\n  and site (for example, load is too big for any vehicle);\n- Hard constraint violation, e.g. site is impossible to reach before\n  strict time window end;\n- Soft constraint violation, when violation cost exceeds site’s unserved cost.\n\n## Unserved cost\n\nEach site in the routing problem for optimization has a cost of non-performing\nthe visit to this site. When not defined, a big default number is used for unserved cost.\n\nUnserved cost is a limit of all cost values, associated with site visit. For instance,\na site with unserved cost of `1000` will never be served by a vehicle that has\ndistance cost per kilometer equals to `1`, and distance between any other site to the site\nin this example exceeds `1000km`.\n\n<div class=\"doc-note\">\n\nAnother scenario when it may be useful to alter the default unserved cost value is\nwhen the capacity of the fleet is less than the volume of sites to be served.\n\nIn such scenario, unserved cost can be used as a priority value to indicate which\nsites should be served in first place. \n</div>\n\n## Planning Horizon\n\nPlanning Horizon is a range of time of the whole Routing Problem, from the earliest\nto latest depot or vehicle shift time window.\n\nFor example, a Routing Problem can be submitted for optimization a day in advance\nbefore execution and contains orders and driver’s shifts for the next day,\nstarting from `08:00` and ending at `21:00`. In this case, the planning horizon is `13` hours.\n\nThe optimization engine does not limit the planning horizon, however extremely long\nroute planning intervals (multi-day or multi-week) may require additional tuning\nby our development team for optimal performance.\n\n## Site\n\nSite is a location to be visited by a vehicle, associated with a job to be performed\nduring the visit. \n\nThe location of a site is defined with geographic coordinates. In case your dataset\ncontains street addresses, the geocoding is required, e.g. each address should be referenced\nto a geographical location. \n\nWe recommend Google Maps Geocoding API or a similar third-party API for geocoding purposes.\n\nSites with the same geographical location, intersected time windows and other compatible\nproperties are referred to as colocated sites. \n\nA site can have multiple additional constraints, such as time window, required vehicle\ncapabilities, job type (pickup or delivery), duration of the job, duration of parking\nor other operations before the job, duration of goods loading at the depot and so on.\n\nSee [`Site` type reference](#addRoutingRequest.request.sites.{}) for a complete list\nof supported constraints. \n\n## Time window\n\nTime window is a range of time that limits certain operations, for example depot\nopening hours, driver’s shift time, or a range of time when an order can be picked\nup or delivered to the customer. \n\n## Job\n\nA job is an operation that a vehicle (or it’s driver) performs on site. In case of\ngoods transportation, the job represents pickup or delivery operation. The API\nsupports mixed pickup-and-delivery operations, covering three possible scenarios:\n- Pickup at a depot, delivery to a site;\n- Pickup at a site, delivery to another site;\n- Pickup at a site, delivery to a depot.\n\nA job has duration, which is the time required to complete the job after arrival. \n\nFor colocated sites, it is also possible to define a preparing duration - time for\ncommon operations, performed before multiple jobs at the same location, for example\nvehicle parking. \n\n## Depot\n\nDepot is a special type of site, where vehicles start and optionally finish routes.\nA routing problem can have multiple depots, which can be starting or ending sites\nfor particular vehicles.  \n\nA depot shares many of its properties with sites, and supports additional constraints\nsuch as depot throughput (the amount of load a depot can release per hour). \n\nSee [`Depot` type reference](#addRoutingRequest.request.depots.{}) for a complete list\nof supported constraints. \n\n## Vehicle\n\nVehicle is a physical vehicle that starts from a depot, visits sites in optimal\norder, and returns to a depot at the end of the route. Start and finish depots are optional.\n\nA vehicle has capacity, defined in volumetric or abstract countable units to limit the\namount of transportable load. Additionally, a vehicle can have one or more capabilities\nthat define functional properties or type of the vehicle (for example, the ability to\ncarry only certain types of load, availability of a forklift or refrigeration system and so on).  \n\nA vehicle can start and finish its route at any time within the depot time window,\nperforming one or more roundtrips to the depot to pick up or deliver picked up load.\nOptionally, a vehicle can have one or more associated driver’s shifts.\n\nSee [`Vehicle` type reference](#addRoutingRequest.request.fleet.{}) for a complete list\nof supported constraints. \n\n## Driver’s shift\n\nA shift or a driver’s shift is a range of time when a vehicle can drive, visiting sites\nand performing jobs. \n\nBy default, each vehicle has one driver’s shift, with the time window equal to the\nvehicle’s depot time window. Depending on the use case, it is possible to define\nmultiple driver’s shifts to map availability of drivers to available vehicles. \nWhen a driver's shift is defined, the vehicle will operate within the limits of\nthe defined driver’s shift, returning to the depot to start a new shift.\n\nThe API does not provide capabilities to define drivers, however it is possible to\nlimit total shift duration to model driver’s working hours limit. It is also possible\nto limit total driven distance or energy spent by a vehicle, for refueling or EV\nrecharging constraints.  \n\n## Load and capacity\n\nThe API allows definition of load size to be picked up or delivered for each site,\ndepending on the site job type. \n\nThe load can be defined in volumetric dimensions, using weight in kilograms, or volume\nin cubic meters. The weight and volume can be specified explicitly and are completely\nindependent. In the case when weight is specified and volume is not specified, the\nlatter is calculated using a common volumetric factor, and vice versa.\n\nIn addition to weight and volume, the load can be specified in non-metric countable units \n(boxes, kegs, pallets, etc.). Countable units are completely independent of weight and\nvolume and can be combined with volumetric units if required.\n\nThe API for vehicle capacity definition is the same as for site load definition, and\nuses three independent capacity dimensions (weight, volume and countable units).\n\n## Load types\n\nThe API supports definition of load categories, and a simple rule system to allow\nor restrict mixing of certain load categories during a single vehicle roundtrip.\n\nDepending on a use case, this functionality can be used for transportation of load\nwith different safety classes, or, for example, for transportation of non-mixable\ntypes of passengers. \n \n## Transit distance and time estimation\n\nThe optimization engine uses a pre-calculated matrix of site-to-site routes to\nestimate transit time and distance between any two sites of the routing problem.\n\nThere are three types of routing (matrix) data sources which [can be defined in the Routing Problem request](#addRoutingRequest.request.options.cost_matrix):\n- Open Street Map road data, OSRM routing for light vehicles without traffic;\n- HERE Maps road data, HERE Matrix API for light vehicles with traffic;\n- User-supplied matrix data from any external routing API.\n\nOther matrix types supported by API such as straight line distance are intended for requests debugging. \n\n## Road Traffic\n\nThe optimization engine is capable of using road traffic information in the form\nof time-variable transit matrices.\n\nWhen using HERE Maps traffic, it is possible to specify time points, corresponding\nto the time of the day when traffic in the geographical area of the routing problem\nchanges compared to free flow road speeds. For example, for city areas usually there\nare morning and evening traffic peaks around certain hours of the day.\n\nIn case when the user-supplied transit matrices are used, it is also possible to specify\na time point for each matrix, that indicates time of the day when a particular matrix\nshould be used.\n\n# Extensibility\n\nThe API supports wide range of operational scenarios, covering same-day or next-day route\nplanning. In addition to stable API functionality, it is also possible to introduce customer-specific\nconstraints, that remain hidden from the public API and are usable only with a particular API key.\n\nWe are aiming to provide unified API object model, and iteratively move new functionality\nfrom customer-specific use cases to common public API.\n\nAt the moment, we do not provide ways to extend API functionality with customer's own code. The\ninternals of our route optimization engine contain highly optimized algorithms, which we carefully extend\nto cover new operational use cases and constraints on customer's request.\n\n# Optimization quality and speed\n\nA [Vehicle Routing Problem](https://en.wikipedia.org/wiki/Vehicle_routing_problem) requires significant\ntime to obtain a good solution.\n\nInternally, optimization engine uses multiple servers and multiple CPU cores on each server to speed up\nthe search and try millions of route combinations per second. The end-to-end search time varies with the\nnumber of sites and vehicles, and is usually in the range between 30 seconds to 10 minutes. The number of\nparallel optimization requests is limited by your API key quota. \n\nThere are several modes that [control the quality of Routing Solution](#addRoutingRequest.request.options.quality),\nas well as optimization time: `debug`, `normal` and `high`.\n\nIn 99% of the use cases, a `normal` mode must be used. For development purposes, we recommend to use `debug`\nmode for quick evaluation of cost and constraints model.\n\n\n# Asynchronous API\n\nThe Routing API is an asynchronous REST API. Since route optimization requires significant\ntime to process a request, the communication with the API is done via two REST endpoints:\n- [`/add` endpoint](#operation/addRoutingRequest) to submit JSON definition of Routing Problem,\n  and receive unique id for further polling of result;\n- [`/result` endpoint](#operation/getRoutingResult) to poll for optimization status and\n  result when optimization completed.\n\n"},"components":{"securitySchemes":{"Bearer":{"type":"http","scheme":"bearer","description":"All requests to the API must be authorized with user's API key. The API uses HTTP Bearer authorization scheme.The API key must be provided in HTTP headers in one of the following formats:\n\n```\nAuthorization: Bearer <your API key>\nAuthorization: Apikey <your API key>```","name":"Authorization","in":"header"}},"schemas":{"TaskInfo":{"type":"object","title":"TaskDescription","description":"Task description. Contains task id for subsequent requests, and task statuses.","properties":{"id":{"type":"string","description":"Task unique id"},"status":{"type":"string","enum":["created","started","completed","cancelled"],"description":"Current status of an asynchronous task.\n\nStatus values:\n* `created` - request JSON has been parsed and validated, and task was created;\n* `started` - task execution has started;\n* `completed` - task execution has been completed;\n* `cancelled` - task execution has been cancelled due to timeout or error.\n\nThe status of a task will change only in the following ways during execution:\n* `created ⟶ cancelled`;\n* `created ⟶ started ⟶ (completed or cancelled).`\n"},"status_log":{"type":"array","description":"Task status log","items":{"title":"StatusLogEntry","type":"object","properties":{"time":{"type":"string","description":"Status time, ISO8601 timestamp in UTC time zone"},"status":{"type":"string","enum":["started","completed","cancelled"],"description":"Status value"}},"required":["time","status"],"additionalProperties":false}}},"required":["id","status","status_log"]},"Error":{"type":"object","properties":{"error":{"type":"object","title":"ErrorDescription","description":"Error description.","properties":{"message":{"type":"string","description":"Error text."},"request_id":{"type":"string","description":"Unique identifier of the request for tracing purposes."},"details":{"type":"object","description":"Additional information about the error."}},"additionalProperties":false,"required":["message"]}},"additionalProperties":false,"required":["error"]},"BalancedShifts":{"description":"Balanced vehicle shifts definition.\n\nTo include vehicle shift into the group, specify id of the group in `fleet{}.shifts{}.balance_key`.","type":"object","properties":{"failure_costs":{"title":"BalancedShiftsCosts","description":"Costs of balancing shifts by total number stops or total shift duration.","type":"object","properties":{"per_hour":{"type":"number","default":3.0,"minimum":0,"exclusiveMinimum":true,"description":"Balances shifts in the group by total duration.\n\nDefines the cost per each hour of Root Sum Squared (RSS) difference between the duration of a shift and average duration of other balanced shifts."},"per_stop":{"type":"number","default":1.0,"minimum":0,"exclusiveMinimum":true,"description":"Balances shifts in the group by total number of stops.\n\nDefines the cost per each stop in Route Sum Squared (RSS) difference between the number of stops in a shift and average number of stops in other balanced shifts."}}}},"additionalProperties":false},"BalancedShiftsDictionary":{"type":"object","additionalProperties":{"title":"BalancedShifts","allOf":[{"$ref":"#/components/schemas/BalancedShifts"}]},"description":"Vehicles shifts balancing"},"Capacity":{"type":"object","description":"Vehicle capacity","properties":{"volume":{"type":"number","minimum":0,"default":0.0,"description":"Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."},"weight":{"type":"number","minimum":0,"default":0.0,"description":"Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."},"count":{"type":"number","minimum":0,"default":0.0,"description":"Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."}},"additionalProperties":false},"CompositeCostMatrix":{"type":"object","properties":{"type":{"type":"string","enum":["composite"],"description":"Composite cost matrix, includes multiple submatrices for different vehicle types or time points.\n\nAll submatrices must have equal dimensions."},"value":{"type":"array","description":"Array of submatrices.","title":"CompositeCostMatrixItem","items":{"allOf":[{"$ref":"#/components/schemas/CompositeCostMatrixItem"}]},"minItems":2},"dimensions":{"type":"string","description":"Type of available matrix dimensions, that must appear in cost matrix body.\n\nFollowing types are supported:\n* `distance_duration` - transit distance and duration;\n* `distance_duration_energy` - transit distance, duration and energy spent during the transition","enum":["distance_duration","distance_duration_energy"],"default":"distance_duration"},"metadata":{"type":"object","description":"Unstructured metadata associated with matrix","additionalProperties":true}},"required":["type","value"],"additionalProperties":false},"CompositeCostMatrixItem":{"type":"object","x-extendedDiscriminator":"type","oneOf":[{"$ref":"#/components/schemas/GcsCostMatrixReference"},{"$ref":"#/components/schemas/UrlCostMatrixReference"},{"$ref":"#/components/schemas/JsonTimePointCostMatrix"}]},"Constraints":{"type":"object","additionalProperties":false,"description":"Constraints applied to all vehicles in the fleet or to all defined sites","properties":{"employed_vehicles_limit":{"title":"EmployedVehiclesLimit","description":"Limit the number of employed vehicles.","allOf":[{"$ref":"#/components/schemas/EmployedVehiclesLimit"}]},"balanced_shifts":{"title":"BalancedShiftsDictionary","description":"Vehicle shifts balancing.\n\nEnables balancing of selected vehicles shifts by total duration or number of stops.\n\nA balancing key defined here should be referred at vehicle shift definition to enable route balancing for the shift, see `fleet{}.shifts{}.balancing_key`","allOf":[{"$ref":"#/components/schemas/BalancedShiftsDictionary"}]},"same_route_sites":{"title":"SameRouteSitesDictionary","description":"Same route sites groups.\n\nEnforces group of sites to appear on the same route.\n\nA group key defined here should be referred at site definition to enable the same route requirement, see `sites{}.same_route_key`","allOf":[{"$ref":"#/components/schemas/SameRouteSitesDictionary"}]},"load_category_restrictions":{"type":"array","description":"Defines lists of restricted load categories combinations, which can not be transported in any vehicle at the same time during the route. \n\nLoad categories defined here should be specified at site definition, see `sites{}.load.category` field.","title":"LoadCategoriesRestrictionsLists","items":{"type":"array","title":"LoadCategoriesRestrictions","items":{"type":"string","title":"LoadCategory","description":"Category or safety class of transported item."}}}}},"CostMatrix":{"type":"object","x-extendedDiscriminator":"type","oneOf":[{"$ref":"#/components/schemas/HereCostMatrix"},{"$ref":"#/components/schemas/OsrmCostMatrix"},{"$ref":"#/components/schemas/GcsCostMatrixReference"},{"$ref":"#/components/schemas/UrlCostMatrixReference"},{"$ref":"#/components/schemas/JsonCostMatrix"},{"$ref":"#/components/schemas/ZeroCostMatrix"},{"$ref":"#/components/schemas/StraightLineCostMatrix"},{"$ref":"#/components/schemas/CompositeCostMatrix"}]},"DelayedStartCosts":{"type":"object","properties":{"per_hour":{"type":"number","default":15.0,"minimum":0,"description":"Cost per each hour of delayed start from the depot.\n\nThe cost should normally be higher than `vehicle.cost.per_hour` to minimize delayed start."}},"required":["per_hour"],"additionalProperties":false},"Depot":{"type":"object","properties":{"location":{"$ref":"#/components/schemas/GeographicLocation"},"time_window":{"title":"TimeWindow","description":"Time window for depot operations.\n \nRange of time, when depot is allowed to dispatch or accept returning vehicles.","allOf":[{"$ref":"#/components/schemas/TimeWindow"}]},"untimely_operations_costs":{"title":"UntimelyOperationsCosts","description":"Costs for depot time window violation.\n\nVehicles dispatched too early (before depot time window start) or returned too late (after time window end) will result violation cost added to the total cost of the route.","allOf":[{"$ref":"#/components/schemas/UntimelyOperationsCosts"}]},"delayed_start_costs":{"title":"DelayedStartCosts","description":"Costs of delayed start of a route at the depot.\n\nVehicles dispatched too late after depot or vehicle shift time window start will result corresponding violation cost added to the total cost of the route.","allOf":[{"$ref":"#/components/schemas/DelayedStartCosts"}]},"duration":{"type":"number","description":"Duration that vehicle spends at a depot (e.g. goods loading), seconds.","minimum":0,"default":0.0},"throughput":{"$ref":"#/components/schemas/DepotThroughput"},"throughput_violation_costs":{"title":"ThroughputViolationCosts","description":"Costs of violating defined depot throughput.\n\nAdded to the total cost of the route when load handled by depot exceeds defined throughput limits.","allOf":[{"$ref":"#/components/schemas/ThroughputViolationCosts"}]}},"required":["location","time_window"],"additionalProperties":false,"description":"Depot where all vehicles start and optionally finish their routes."},"DepotThroughput":{"description":"Maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.","oneOf":[{"$ref":"#/components/schemas/TimeConstantDepotThroughput"},{"$ref":"#/components/schemas/TimeVariableDepotThroughput"}]},"DepotsDictionary":{"type":"object","additionalProperties":{"title":"Depot","allOf":[{"$ref":"#/components/schemas/Depot"}]},"description":"Depots where vehicles start and finish routes."},"DistanceLimitFailureCosts":{"type":"object","properties":{"per_event":{"type":"number","default":1000.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each shift violating the limit"},"per_m":{"type":"number","default":10.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each meter of transit distance, violating the limit"}},"additionalProperties":false},"EmployedVehiclesLimit":{"type":"object","properties":{"min":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Minumum number of vehicles to employ."},"failure_costs":{"title":"VehiclesLimitFailureCosts","description":"Cost of employing less than a minimum number of vehicles.","allOf":[{"$ref":"#/components/schemas/VehiclesLimitFailureCosts"}]}},"additionalProperties":false,"required":["min"]},"EnergyLimitFailureCosts":{"type":"object","properties":{"per_event":{"type":"number","default":1000.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each shift violating the limit"},"per_kwh":{"type":"number","default":100.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each kWh of transit energy, violating the limit"}},"additionalProperties":false},"GcsCostMatrixReference":{"type":"object","properties":{"type":{"description":"Cost matrix specified as remote JSON file stored in Google Cloud Storage bucket. \n\nThe bucket must be publically accessible, or configured for private access by internal service account. \n\nThe object can optionally be compressed with gzip, and will be decompressed automatically after download, if object body starts from the valid gzip header.","type":"string","enum":["gcs"]},"bucket":{"type":"string","description":"GCS bucket"},"object":{"type":"string","description":"Full path to object in GCS bucket"},"dimensions":{"type":"string","description":"Type of available matrix dimensions, that must appear in cost matrix body.\n\nFollowing types are supported:\n* `distance_duration` - transit distance and duration;\n* `distance_duration_energy` - transit distance, duration and energy spent during the transition","enum":["distance_duration","distance_duration_energy"],"default":"distance_duration"}},"required":["type","bucket","object"],"additionalProperties":false},"GeographicLocation":{"description":"Geographic coordinate in WGS84 projection.","type":"object","properties":{"lat":{"type":"number","minimum":-90.0,"maximum":90.0,"description":"Latitude"},"lng":{"type":"number","minimum":-180.0,"maximum":180.0,"description":"Longitude"}},"required":["lat","lng"],"additionalProperties":false},"HereCostMatrix":{"type":"object","properties":{"type":{"type":"string","description":"Cost matrix requested from HERE Matrix API v8.","enum":["here"]},"vehicle_type":{"type":"string","description":"Vehicle type, affects transit speed and restrictions.\n\nSpecified timepoints will be ignored for `heavy`.","enum":["light","heavy"],"default":["light"]},"time_points":{"type":"array","description":"Time points, representing changing traffic patterns.\n\nWhen specified, multiple submatrices with different departure time will be returned to the caller. The number of returned submatrices can be not equal to the number of specified time point and depends on region size, vehicle type, traffic availability and other implementation details.","items":{"type":"string","description":"Time point, ISO8601 timestamp with timezone","minItems":1}}},"required":["type"],"additionalProperties":false},"JsonCostMatrix":{"type":"object","properties":{"type":{"description":"Transit cost matrices inlined in JSON.","type":"string","enum":["json"]},"value":{"title":"JsonCostMatrixValue","description":"Row-major matrices of transit distances and durations between origins and destinations.","allOf":[{"$ref":"#/components/schemas/JsonCostMatrixValue"}]},"dimensions":{"type":"string","description":"Type of available matrix dimensions, that must appear in cost matrix body.\n\nFollowing types are supported:\n* `distance_duration` - transit distance and duration;\n* `distance_duration_energy` - transit distance, duration and energy spent during the transition","enum":["distance_duration","distance_duration_energy"],"default":"distance_duration"},"metadata":{"type":"object","description":"Unstructured metadata associated with matrix","additionalProperties":true}},"required":["type","value"],"additionalProperties":false},"JsonCostMatrixValue":{"type":"object","properties":{"durations":{"title":"RowMajorMatrix","description":"Transit durations, seconds.","allOf":[{"$ref":"#/components/schemas/RowMajorMatrix"}]},"distances":{"title":"RowMajorMatrix","description":"Transit distances, meters.","allOf":[{"$ref":"#/components/schemas/RowMajorMatrix"}]},"energy":{"title":"RowMajorMatrixWithNegatives","description":"Transit energy, kW/h per distance in meters. \n\nRequired when `dimensions` value is set to `distance_duration_energy`, otherwise optional. Allows negative values in matrix cells.","allOf":[{"$ref":"#/components/schemas/RowMajorMatrixWithNegatives"}]},"fallback_cells":{"title":"MatrixCoordinates","description":"An array of matrix cells indices (`[row, column]`), where distance calculation failed (non-routable locations, closed roads, etc).\n\nFailed cells are replaced with:\n* `distances`, approximate straight line distance [as per US FCC formula](https://www.gpo.gov/fdsys/pkg/CFR-2005-title47-vol4/pdf/CFR-2005-title47-vol4-sec73-208.pdf)\n* `durations`, travel duration for approximated distance at speed 20 km/h\n* `energy`, 0.2 kW/h per each km of approximated distance\n","allOf":[{"$ref":"#/components/schemas/MatrixCoordinates"}]}},"required":["durations","distances"],"additionalProperties":false},"JsonTimePointCostMatrix":{"type":"object","properties":{"type":{"description":"Transit cost matrices inlined in JSON.","type":"string","enum":["json_time_point"]},"time_point":{"description":"Time of departure for all origins/destinations, ISO8601 timestamp with timezone","type":"string"},"value":{"title":"JsonCostMatrixValue","description":"Row-major matrices of transit distances and durations between origins and destinations, where all routes are departing at specified time point.","allOf":[{"$ref":"#/components/schemas/JsonCostMatrixValue"}]},"dimensions":{"type":"string","description":"Type of available matrix dimensions, that must appear in cost matrix body.\n\nFollowing types are supported:\n* `distance_duration` - transit distance and duration;\n* `distance_duration_energy` - transit distance, duration and energy spent during the transition","enum":["distance_duration","distance_duration_energy"],"default":"distance_duration"},"metadata":{"type":"object","description":"Unstructured metadata associated with matrix","additionalProperties":true}},"required":["type","value"],"additionalProperties":false},"LateOperationsCosts":{"type":"object","properties":{"per_event":{"type":"number","default":15.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per an event of late operations"},"per_late_minute":{"type":"number","default":0.25,"minimum":0,"exclusiveMinimum":true,"description":"Cost per a minute of late operations"}},"additionalProperties":false},"Load":{"type":"object","description":"Load at the site to be picked up or delivered by a vehicle","properties":{"volume":{"type":"number","minimum":0,"default":0.0,"description":"Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."},"weight":{"type":"number","minimum":0,"default":0.0,"description":"Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."},"count":{"type":"number","minimum":0,"default":0.0,"description":"Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."},"categories":{"type":"array","items":{"type":"string","title":"LoadCategory","description":"Category or safety class of transported item."},"description":"Categories or safety classes of transported item.","title":"LoadCategories"}},"additionalProperties":false},"MatrixCoordinates":{"type":"array","description":"Column and row coordinate","items":{"type":"array","items":{"type":"integer","format":"integer","minimum":0,"minItems":2,"maxItems":2}},"additionalItems":false},"MinimiumLoad":{"type":"object","description":"Mininum load allowed to be handled by the vehicle","properties":{"volume":{"type":"number","minimum":0,"default":0.0,"description":"Volume, cubic meters.\n\nWhen `volume` is not specified, and `weight` is specified, will be calculated from `weight` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."},"weight":{"type":"number","minimum":0,"default":0.0,"description":"Weight, kilograms.\n\nWhen `weight` is not specified, and `volume` is specified, will be calculated from `volume` using [volumetric factor of 200 kg/cbm](https://en.wikipedia.org/wiki/Dimensional_weight)."},"count":{"type":"number","minimum":0,"default":0.0,"description":"Count, items.\n\nA unit of count defining the number of items regarded as separate and equal units. Used independently from `weight` or `volume`."}},"additionalProperties":false},"MovedLoadCost":{"type":"object","description":"Cost of moving a load over a distance in kilometers.\n\nThis cost component will force vehicles to deliver heavier load first, or pickup heavier load at the end of the route, maximizing vehicle energy efficiency (particularly for EV).\n\nNote, that vehicles capacity and load size should be specified using the same weight units as load moving costs.","oneOf":[{"$ref":"#/components/schemas/MovedLoadCostKgKm"},{"$ref":"#/components/schemas/MovedLoadCostCountKm"}]},"MovedLoadCostCountKm":{"type":"object","properties":{"per_countkm":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Cost of moving 1 item over 1 km, items⋅km."}},"required":["per_countkm"],"additionalProperties":false},"MovedLoadCostKgKm":{"type":"object","properties":{"per_kgkm":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Cost of moving 1 kg over 1 km, kg⋅km."}},"required":["per_kgkm"],"additionalProperties":false},"Options":{"type":"object","properties":{"cost_matrix":{"title":"CostMatrix","description":"Matrix of transit distances and durations between all depots and sites.","allOf":[{"$ref":"#/components/schemas/CostMatrix"}]},"quality":{"type":"string","description":"Solution quality:\n* `debug` - low-quality solution for validation of task constraints;\n* `normal` - regular solution quality, up to 10 minutes execution time;\n* `high` - best solution quality, up to 20 minutes execution time, additional 1-5% savings compare to `normal`;\n","enum":["debug","normal","high"],"default":"normal"},"internal":{"type":"object","additionalProperties":true,"description":"Experimental options, reserved for internal use"}}},"OsrmCostMatrix":{"type":"object","properties":{"type":{"type":"string","description":"Cost matrix from OpenStreetMap (OSRM router, car profile)","enum":["osrm"]}},"required":["type"],"additionalProperties":false},"RowMajorMatrix":{"type":"array","description":"Row-major matrix of positive numbers","items":{"type":"array","items":{"type":"number","format":"float","minimum":0.0}},"additionalItems":false},"RowMajorMatrixWithNegatives":{"type":"array","description":"Row-major matrix of positive and negative numbers","items":{"type":"array","items":{"type":"number","format":"float"}},"additionalItems":false},"SameRoute":{"description":"Same route site group definition.\n\nTo include site into the group, specify id of the group in `sites{}.same_route_key`.","type":"object","properties":{"failure_costs":{"title":"SameRouteFailureCosts","description":"Costs of failing to have all group sites on the same route.","type":"object","properties":{"per_site":{"type":"number","default":10.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each site in the group failing the constraint."}}}},"additionalProperties":false},"SameRouteSitesDictionary":{"type":"object","additionalProperties":{"title":"SameRoute","allOf":[{"$ref":"#/components/schemas/SameRoute"}]},"description":"Groups of sites to appear on the same route"},"Shift":{"type":"object","properties":{"time_window":{"title":"TimeWindow","description":"Time window of a vehicle shift.\n\nVehicle should finish the route and optionally return to depot by the end of defined shift time window.","allOf":[{"$ref":"#/components/schemas/TimeWindow"}]},"late_operations_costs":{"title":"LateOperationsCosts","description":"Cost of late finish of a shift.\n\nAdded to total cost of the solution, when shift is finished later than specified shift time window. Does not apply when `time_window.strict = true`.","allOf":[{"$ref":"#/components/schemas/LateOperationsCosts"}]},"stops_limit":{"title":"ShiftStopsLimit","description":"Minimum number of site stops per each shift route.\n\nNote that co-located sites are accounted as one stop, and depot start and end is not counted.","allOf":[{"$ref":"#/components/schemas/ShiftStopsLimit"}]},"distance_limit":{"title":"ShiftDistanceLimit","description":"Maximum transit distance of the shift, meters.\n\nIn case when transit distance of a shift route exceeds defined limit, `distance_limit.failure_costs` are added to the total cost of the route proportionaly to excess distance.","allOf":[{"$ref":"#/components/schemas/ShiftDistanceLimit"}]},"energy_limit":{"title":"ShiftEnergyLimit","description":"Maximum transit energy of the shift, kWh.\n\nIn case when transit energy of a shift route exceeds defined limit, `energy_limit.failure_costs` are added to the total cost of the route proportionaly to excess energy.","allOf":[{"$ref":"#/components/schemas/ShiftEnergyLimit"}]},"duration_limit":{"type":"number","default":0.0,"description":"Maximum duration of the shift, seconds.\n\nIn case when duration of the shift exceeds defined limit, `late_operations_costs` are added to the total cost of the route proportionaly to excess time."},"balance_key":{"type":"string","minLength":1,"description":"A key to define group of shifts that will be balanced by total number of stops or total duration.\n\nSee `constraints.balanced_shifts`"},"gap":{"type":"number","default":0.0,"description":"Delay between consecutive shifts performed by a vehicle, seconds.\n\nThe `gap` value can be used to model fixed-time operations between the shifts, such as swapping the driver, or processing the paperwork at the depot."}},"required":["time_window"],"additionalProperties":false},"ShiftDistanceLimit":{"type":"object","properties":{"max":{"type":"number","minimum":0,"description":"Maximum transit distance of the route, meters."},"failure_costs":{"title":"DistanceLimitFailureCosts","description":"Cost of violating maximum transit distance limit of the route (`distance_limit.max`).","allOf":[{"$ref":"#/components/schemas/DistanceLimitFailureCosts"}]}},"required":["max"],"additionalProperties":false},"ShiftEnergyLimit":{"type":"object","properties":{"max":{"type":"number","minimum":0,"description":"Maximum transit energy of the route, kWh."},"failure_costs":{"title":"EnergyLimitFailureCosts","description":"Cost of violating maximum transit energy limit of the route (`energy_limit.max`).","allOf":[{"$ref":"#/components/schemas/EnergyLimitFailureCosts"}]}},"required":["max"],"additionalProperties":false},"ShiftStopsLimit":{"type":"object","properties":{"min":{"type":"number","minimum":0,"description":"Minumum number of stops a vehicle should made on the route. Note that co-located sites are counted as one stop, and depot start and end is not counted."},"failure_costs":{"title":"StopsLimitFailureCosts","description":"Cost of having less than `stops_limit.min` stops in the route.\n\nAdded to total cost of the solution, when route has less than required number of stops.","allOf":[{"$ref":"#/components/schemas/StopsLimitFailureCosts"}]}},"required":["min"],"additionalProperties":false},"ShiftsDictionary":{"type":"object","additionalProperties":{"title":"Shift","allOf":[{"$ref":"#/components/schemas/Shift"}]},"description":"Vehicle shifts.\n\nA shift defines vehicle operational limits, such as time windows, duration and distance limits, balancing and others.\n\n**Note, that vehicle can make multiple depot roundtrips within a single shift time window,** which leads to duration and distance for multiple roundtrips being accumulated before checking the result against defined limits.\n\nIn order to limit distance or duration of a single roundtrip within a shift, create copies of the same shift object with a unique name."},"Site":{"type":"object","properties":{"location":{"$ref":"#/components/schemas/GeographicLocation"},"time_window":{"title":"TimeWindow","description":"The range of time when a visit to the site is allowed.","allOf":[{"$ref":"#/components/schemas/TimeWindow"}]},"untimely_operations_costs":{"title":"UntimelyOperationsCosts","description":"Costs of untimely arrival to the site.\n\nWhen vehicle arrives to the site too early or too late in respect with the site time window, the corresponding cost is added to the overall cost of the route.","allOf":[{"$ref":"#/components/schemas/UntimelyOperationsCosts"}]},"load":{"$ref":"#/components/schemas/Load"},"unperformed_cost":{"type":"number","description":"Cost of non-performing a visit.","minimum":0,"default":100000000.0},"duration":{"type":"number","description":"Duration of the job, performed during the site visit, seconds.\n\nExample: time to handle goods or perform services during the site visit.","minimum":0,"default":0.0},"preparing_duration":{"type":"number","description":"Time before the job during the site visit, seconds.\n\nFor co-located sites, will only be accounted for the first site in sequence.\n\nExample: parking time or time for security clearance during site visit, which will happen once if several sites share the same geo coordinates and time window (\"co-located\").","minimum":0,"default":0.0},"loading_duration":{"type":"number","description":"Duration of loading the goods at the depot, seconds.\n\nWill be added to `depot.duration` to adjust time spent by vehicle at the depot.","minimum":0,"default":0.0},"required_capabilities":{"title":"CapabilitiesList","description":"Vehicle capabilities required on site.\n\nA site can require vehicle with certain characteristics, such as cold storage, or a tailgate lift. Multiple capabilities are allowed. See `fleet{}.capabilities`.","type":"array","items":{"title":"Capability","type":"string"},"minItems":1},"job":{"type":"string","description":"Type of job performed at a site.\n\nFollowing types are supported:\n* `delivery` - goods are picked up at depot and delivered to this site;\n* `pickup` - goods are picked up at this site and delivered to the site specified in `deliver_to` field or to the depot at the end of the route.","enum":["pickup","delivery"],"default":"delivery"},"deliver_to":{"type":"string","description":"For `pickup` jobs, specifies `id` of destination site for delivery."},"same_route_key":{"type":"string","description":"Ensure that sites with equal `same_route_key` will appear on the same route.\n\nNote that all unique `same_route_key` values must be also specified at `constraints.same_route_sites`."}},"required":["location","time_window"],"additionalProperties":false,"description":"Site definition."},"SiteBase":{"type":"object","properties":{"location":{"$ref":"#/components/schemas/GeographicLocation"},"time_window":{"title":"TimeWindow","description":"Time window","allOf":[{"$ref":"#/components/schemas/TimeWindow"}]},"untimely_operations_costs":{"title":"UntimelyOperationsCosts","description":"Costs of untimely arrival to the site.\n\nWhen vehicle arrives to the site too early or too late in respect with the site time window, the corresponding cost is added to the overall cost of the route.","allOf":[{"$ref":"#/components/schemas/UntimelyOperationsCosts"}]}},"required":["location","time_window"],"additionalProperties":false},"SitesDictionary":{"type":"object","additionalProperties":{"title":"Site","allOf":[{"$ref":"#/components/schemas/Site"}]},"description":"Sites to be visited."},"StopsLimitFailureCosts":{"type":"object","properties":{"per_event":{"type":"number","default":1000.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each shift violating the limit"},"per_stop":{"type":"number","default":100.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each stop violating the limit"}},"additionalProperties":false},"StraightLineCostMatrix":{"type":"object","properties":{"type":{"type":"string","description":"Cost matrix calculated using straight line distance [as per US FCC formula](https://www.gpo.gov/fdsys/pkg/CFR-2005-title47-vol4/pdf/CFR-2005-title47-vol4-sec73-208.pdf)\n\nTransit durations are calculated with speed 20 km/h\n","enum":["straight_line"]}},"required":["type"],"additionalProperties":false},"ThroughputItems":{"type":"object","properties":{"items_per_hour":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Maximum number of items released per hour."}},"required":["items_per_hour"],"additionalProperties":false},"ThroughputViolationCosts":{"type":"object","properties":{"per_event":{"type":"number","default":100.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per an event of depot throughput violation"},"per_kg":{"type":"number","default":10.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each kg of handled load exceeding defined depot throughput"},"per_count":{"type":"number","default":10.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each countable item of handled load exceeding defined depot throughput"}},"additionalProperties":false},"ThroughputWeight":{"type":"object","properties":{"weight_per_hour":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Maximum weight released per hour, kilograms."}},"required":["weight_per_hour"],"additionalProperties":false},"TimeConstantDepotThroughput":{"type":"object","description":"Maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.","oneOf":[{"$ref":"#/components/schemas/ThroughputItems"},{"$ref":"#/components/schemas/ThroughputWeight"}]},"TimeDependentThroughputItems":{"properties":{"time_point":{"type":"string","description":"Time point when throughput value starts to apply, ISO8601 datetime format."},"items_per_hour":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Maximum number of items released per hour."}},"type":"object","required":["items_per_hour","time_point"],"additionalProperties":false,"description":"Maximum number of items released by depot per hour after specified time point, items."},"TimeDependentThroughputWeight":{"properties":{"time_point":{"type":"string","description":"Time point when throughput value starts to apply, ISO8601 datetime format."},"weight_per_hour":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Maximum weight released per hour, kilograms."}},"type":"object","required":["weight_per_hour","time_point"],"additionalProperties":false,"description":"Maximum weight released by depot per hour after specified time point, kilograms."},"TimeVariableDepotThroughput":{"description":"Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.","oneOf":[{"$ref":"#/components/schemas/TimeVariableThroughputWeightList"},{"$ref":"#/components/schemas/TimeVariableThroughputItemsList"}]},"TimeVariableThroughputItemsList":{"type":"array","description":"Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.","items":{"$ref":"#/components/schemas/TimeDependentThroughputItems"},"minItems":1},"TimeVariableThroughputWeightList":{"type":"array","description":"Time-variable maximum number of units that can be released by a depot per hour.\n\nNote, that `fleet{}.capacity` and `sites{}.load` must be using the same units as depot throughput.","items":{"$ref":"#/components/schemas/TimeDependentThroughputWeight"},"minItems":1},"TimeWindow":{"type":"object","properties":{"start":{"type":"string","description":"Time window start in ISO-8601 format.\n\nExamples:  \n`2020-01-02T15:30:00Z` for time in UTC;  \n`2020-01-02T15:30:00+02:00` for time with timezone."},"end":{"type":"string","description":"Time window end in ISO-8601 format.\n\nExamples:  \n`2020-01-02T15:30:00Z` for time in UTC;  \n`2020-01-02T15:30:00+02:00` for time with timezone.  \n"},"strict":{"type":"boolean","default":false,"description":"Indicates that time window can not be failed, i.e. late or early arrival is not possible."}},"required":["start","end"],"additionalProperties":false},"UntimelyOperationsCosts":{"type":"object","properties":{"per_event":{"type":"number","default":15.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per an event of untimely operations"},"per_early_minute":{"type":"number","default":0.25,"minimum":0,"exclusiveMinimum":true,"description":"Cost per a minute of early operations"},"per_late_minute":{"type":"number","default":0.25,"minimum":0,"exclusiveMinimum":true,"description":"Cost per a minute of late operations"}},"additionalProperties":false},"UrlCostMatrixReference":{"type":"object","properties":{"type":{"description":"Cost matrix specified as remote JSON resource, accessible via HTTPS at specified URL. ","type":"string","enum":["url"]},"url":{"description":"HTTPS URL of remote JSON resource","type":"string"},"dimensions":{"type":"string","description":"Type of available matrix dimensions, that must appear in cost matrix body.\n\nFollowing types are supported:\n* `distance_duration` - transit distance and duration;\n* `distance_duration_energy` - transit distance, duration and energy spent during the transition","enum":["distance_duration","distance_duration_energy"],"default":"distance_duration"}},"required":["type","url"],"additionalProperties":false},"Vehicle":{"description":"Vehicle definition.","type":"object","properties":{"costs":{"$ref":"#/components/schemas/VehicleCosts"},"shifts":{"$ref":"#/components/schemas/ShiftsDictionary"},"capacity":{"$ref":"#/components/schemas/Capacity"},"min_load":{"$ref":"#/components/schemas/MinimiumLoad"},"capabilities":{"title":"CapabilitiesArray","description":"Vehicle capabilities.\n\nOne or more vehicle characteristics, that could be required at a site, such as cold storage, or a tailgate lift.","type":"array","items":{"title":"Capability","type":"string"},"minItems":1},"roundtrip":{"type":"boolean","default":true,"description":"Return vehicle to the depot at the end of the route.Will be taken into account only when depot is defined.\n\nSetting `roundtrip` to `false` will force a vehicle to finish the route at last visited site."},"depot_id":{"type":"string","description":"Identifier of a depot where vehicle will start and optionally finish the route.\n\nIf `depot_id` is not defined and `depots` is defined, vehicle will start the route from the first depot in `depots` list.","minLength":1},"end_depot_id":{"type":"string","description":"Optional identifier of a depot, where vehicle will finish the route. \n\nCan be defined only if `depot_id` and `depots` are defined, otherwise will be ignored.","minLength":1}},"additionalProperties":false},"VehicleCosts":{"description":"Vehicle costs.\n\nCosts weights of a vehicle en route. Includes fixed and unit-dependent costs (per km, per hour, etc.). \n\nAdded to the total minimized solution cost as weighted linear combination of route statistical values (time, distance, etc.) and corresponding cost weights.","type":"object","properties":{"per_event":{"type":"number","minimum":0,"exclusiveMinimum":true,"default":1000.0,"description":"Cost of the vehicle, added to total route cost when vehicle is included in a route."},"per_hour":{"type":"number","minimum":0,"exclusiveMinimum":true,"default":10.0,"description":"Cost for each hour of vehicle transit time"},"per_km":{"type":"number","minimum":0,"exclusiveMinimum":true,"default":15.0,"description":"Cost for each kilometer of vehicle transit distance"},"per_site":{"type":"number","minimum":0,"default":0.1,"description":"Cost of visiting a site"},"per_kwh":{"type":"number","minimum":0,"default":0.0,"description":"Cost of energy, used during transit to a site.\n\n**Note, that setting `per_kwh` cost requires cost matrix with `energy` dimension.**"},"moved_load":{"$ref":"#/components/schemas/MovedLoadCost"}},"additionalProperties":false},"VehiclesDictionary":{"type":"object","additionalProperties":{"title":"Vehicle","allOf":[{"$ref":"#/components/schemas/Vehicle"}]},"description":"Fleet of available vehicles to visit sites."},"VehiclesLimitFailureCosts":{"type":"object","properties":{"per_event":{"type":"number","default":1000.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per an event of constraint failure"},"per_vehicle":{"type":"number","default":1000.0,"minimum":0,"exclusiveMinimum":true,"description":"Cost per each vehicle not satisfying the constraint"}},"additionalProperties":false},"ZeroCostMatrix":{"type":"object","properties":{"type":{"type":"string","description":"Cost matrix initialized with zeroes, used for debugging of costs and constraints.","enum":["zero"]}},"required":["type"],"additionalProperties":false},"RouteOptimizationRequest":{"type":"object","description":"Route optimization request.Defines all sites, vehicles, their costs and constraints.","properties":{"fleet":{"$ref":"#/components/schemas/VehiclesDictionary"},"sites":{"$ref":"#/components/schemas/SitesDictionary"},"depots":{"$ref":"#/components/schemas/DepotsDictionary"},"options":{"title":"Options","description":"Route optimization options.","allOf":[{"$ref":"#/components/schemas/Options"}]},"constraints":{"$ref":"#/components/schemas/Constraints"}},"required":["fleet","sites"],"additionalProperties":false},"Request":{"$ref":"#/components/schemas/RouteOptimizationRequest"},"AccumulativeStatistics":{"type":"object","description":"Accumulative statistics","properties":{"objective_value":{"type":"number","minimum":0},"total_cost":{"type":"number","description":"Total vehicle cost","minimum":0},"total_cost_and_penalty":{"type":"number","description":"Total vehicle cost with all violations","minimum":0},"total_penalty":{"type":"number","description":"Total violations cost","minimum":0},"total_locality_penalty":{"type":"number","description":"Total cost of locality violations","minimum":0},"total_same_route_penalty":{"type":"number","description":"Total cost of soft same route sites constraint violation","minimum":0},"total_depot_throughput_penalty":{"type":"number","description":"Total cost of depot throughput violation","minimum":0},"total_duration":{"type":"number","description":"Total time of all routes (end of latest route - begin of earliest route)","minimum":0},"total_travel_duration":{"type":"number","description":"Total time spent in transit for all routes","minimum":0},"total_idle_duration":{"type":"number","description":"Total time spent not performing service at site, and not travelling between sites (`total_duration - total_travel_duration - sum(site.duration)`)","minimum":0},"total_travel_distance":{"type":"number","description":"Total transit distance for all routes","minimum":0},"total_travel_energy":{"type":"number","description":"Total transit energy for all routes","minimum":0},"untimely_operations":{"$ref":"#/components/schemas/UntimelyOperationsStatistics"},"total_moved_load_kgkm":{"type":"number","description":"Total load in kilograms, moved over distance in kilometers","minimum":0},"total_moved_load_countkm":{"type":"number","description":"Total load in countable units, moved over distance in kilometers","minimum":0}},"additionalProperties":false,"required":["total_cost","total_cost_and_penalty","total_penalty","total_locality_penalty","total_same_route_penalty","total_depot_throughput_penalty","total_duration","total_travel_duration","total_travel_distance","total_travel_energy","total_idle_duration","untimely_operations"]},"DepotRouteWaypoint":{"properties":{"depot":{"properties":{"id":{"type":"string","description":"Depot unique ID specified in the request"},"location":{"$ref":"#/components/schemas/GeographicLocation"},"time_window":{"title":"TimeWindow","description":"Time window for depot operations.\n \nRange of time, when depot is allowed to dispatch or accept returning vehicles.","allOf":[{"$ref":"#/components/schemas/TimeWindow"}]},"untimely_operations_costs":{"title":"UntimelyOperationsCosts","description":"Costs for depot time window violation.\n\nVehicles dispatched too early (before depot time window start) or returned too late (after time window end) will result violation cost added to the total cost of the route.","allOf":[{"$ref":"#/components/schemas/UntimelyOperationsCosts"}]},"delayed_start_costs":{"title":"DelayedStartCosts","description":"Costs of delayed start of a route at the depot.\n\nVehicles dispatched too late after depot or vehicle shift time window start will result corresponding violation cost added to the total cost of the route.","allOf":[{"$ref":"#/components/schemas/DelayedStartCosts"}]},"duration":{"type":"number","description":"Duration that vehicle spends at a depot (e.g. goods loading), seconds.","minimum":0,"default":0.0},"throughput":{"$ref":"#/components/schemas/DepotThroughput"},"throughput_violation_costs":{"title":"ThroughputViolationCosts","description":"Costs of violating defined depot throughput.\n\nAdded to the total cost of the route when load handled by depot exceeds defined throughput limits.","allOf":[{"$ref":"#/components/schemas/ThroughputViolationCosts"}]}},"type":"object","required":["location","time_window","id"],"additionalProperties":false,"description":"Depot route waypoint","title":"DepotWaypoint"},"arrival_time":{"type":"string","description":"Time of arrival to waypoint, ISO8601 timestamp in UTC format"},"departure_time":{"type":"string","description":"Time of arrival to waypoint, ISO8601 timestamp in UTC format"},"duration":{"type":"number","minimum":0,"description":"Duration of job at waypoint (handling goods, performing services, etc), seconds."},"idle_duration":{"type":"number","minimum":0,"description":"Idle time during waypoint visit after arrival and before starting the job, seconds."},"travel_duration":{"type":"number","minimum":0,"description":"Travel time to waypoint, seconds"},"untimely_arrival_duration":{"type":"number","description":"Time of untimely arrival to waypoint, seconds. Negative for early arrival (before `time_window.start`), positive for late arrival (after `time_window.end`)"},"travel_distance":{"type":"number","minimum":0,"description":"Travel distance to waypoint, meters"},"travel_energy":{"type":"number","minimum":0,"description":"Travel energy to waypoint, kWh"}},"type":"object","additionalProperties":false,"required":["arrival_time","departure_time","travel_distance","travel_duration","travel_energy","duration","idle_duration","untimely_arrival_duration","depot"]},"RouteShift":{"properties":{"id":{"type":"string","description":"Unique ID of the vehicle shift"},"time_window":{"title":"TimeWindow","description":"Time window of a vehicle shift.\n\nVehicle should finish the route and optionally return to depot by the end of defined shift time window.","allOf":[{"$ref":"#/components/schemas/TimeWindow"}]},"late_operations_costs":{"title":"LateOperationsCosts","description":"Cost of late finish of a shift.\n\nAdded to total cost of the solution, when shift is finished later than specified shift time window. Does not apply when `time_window.strict = true`.","allOf":[{"$ref":"#/components/schemas/LateOperationsCosts"}]},"stops_limit":{"title":"ShiftStopsLimit","description":"Minimum number of site stops per each shift route.\n\nNote that co-located sites are accounted as one stop, and depot start and end is not counted.","allOf":[{"$ref":"#/components/schemas/ShiftStopsLimit"}]},"distance_limit":{"title":"ShiftDistanceLimit","description":"Maximum transit distance of the shift, meters.\n\nIn case when transit distance of a shift route exceeds defined limit, `distance_limit.failure_costs` are added to the total cost of the route proportionaly to excess distance.","allOf":[{"$ref":"#/components/schemas/ShiftDistanceLimit"}]},"energy_limit":{"title":"ShiftEnergyLimit","description":"Maximum transit energy of the shift, kWh.\n\nIn case when transit energy of a shift route exceeds defined limit, `energy_limit.failure_costs` are added to the total cost of the route proportionaly to excess energy.","allOf":[{"$ref":"#/components/schemas/ShiftEnergyLimit"}]},"duration_limit":{"type":"number","default":0.0,"description":"Maximum duration of the shift, seconds.\n\nIn case when duration of the shift exceeds defined limit, `late_operations_costs` are added to the total cost of the route proportionaly to excess time."},"balance_key":{"type":"string","minLength":1,"description":"A key to define group of shifts that will be balanced by total number of stops or total duration.\n\nSee `constraints.balanced_shifts`"},"gap":{"type":"number","default":0.0,"description":"Delay between consecutive shifts performed by a vehicle, seconds.\n\nThe `gap` value can be used to model fixed-time operations between the shifts, such as swapping the driver, or processing the paperwork at the depot."}},"type":"object","required":["time_window","id"],"additionalProperties":false,"description":"Vehicle shift chosen for the route","title":"RouteShift"},"RouteStatistics":{"type":"object","description":"Accumulative statistics for vehicle route","properties":{"objective_value":{"type":"number","minimum":0},"total_cost":{"type":"number","description":"Total vehicle cost","minimum":0},"total_cost_and_penalty":{"type":"number","description":"Total vehicle cost with all violations","minimum":0},"total_penalty":{"type":"number","description":"Total violations cost","minimum":0},"total_locality_penalty":{"type":"number","description":"Total cost of locality violations","minimum":0},"total_same_route_penalty":{"type":"number","description":"Total cost of soft same route sites constraint violation","minimum":0},"total_depot_throughput_penalty":{"type":"number","description":"Total cost of depot throughput violation","minimum":0},"total_duration":{"type":"number","description":"Total time of all routes (end of latest route - begin of earliest route)","minimum":0},"total_travel_duration":{"type":"number","description":"Total time spent in transit for all routes","minimum":0},"total_idle_duration":{"type":"number","description":"Total time spent not performing service at site, and not travelling between sites (`total_duration - total_travel_duration - sum(site.duration)`)","minimum":0},"total_travel_distance":{"type":"number","description":"Total transit distance for all routes","minimum":0},"total_travel_energy":{"type":"number","description":"Total transit energy for all routes","minimum":0},"untimely_operations":{"$ref":"#/components/schemas/UntimelyOperationsStatistics"},"total_moved_load_kgkm":{"type":"number","description":"Total load in kilograms, moved over distance in kilometers","minimum":0},"total_moved_load_countkm":{"type":"number","description":"Total load in countable units, moved over distance in kilometers","minimum":0}},"additionalProperties":false,"required":["total_cost","total_cost_and_penalty","total_penalty","total_locality_penalty","total_same_route_penalty","total_depot_throughput_penalty","total_duration","total_travel_duration","total_travel_distance","total_travel_energy","total_idle_duration","untimely_operations"]},"RouteVehicle":{"properties":{"id":{"type":"string"},"costs":{"$ref":"#/components/schemas/VehicleCosts"},"shifts":{"$ref":"#/components/schemas/ShiftsDictionary"},"capacity":{"$ref":"#/components/schemas/Capacity"},"min_load":{"$ref":"#/components/schemas/MinimiumLoad"},"capabilities":{"title":"CapabilitiesArray","description":"Vehicle capabilities.\n\nOne or more vehicle characteristics, that could be required at a site, such as cold storage, or a tailgate lift.","type":"array","items":{"title":"Capability","type":"string"},"minItems":1},"roundtrip":{"type":"boolean","default":true,"description":"Return vehicle to the depot at the end of the route.Will be taken into account only when depot is defined.\n\nSetting `roundtrip` to `false` will force a vehicle to finish the route at last visited site."},"depot_id":{"type":"string","description":"Identifier of a depot where vehicle will start and optionally finish the route.\n\nIf `depot_id` is not defined and `depots` is defined, vehicle will start the route from the first depot in `depots` list.","minLength":1},"end_depot_id":{"type":"string","description":"Optional identifier of a depot, where vehicle will finish the route. \n\nCan be defined only if `depot_id` and `depots` are defined, otherwise will be ignored.","minLength":1}},"description":"Vehicle properties","type":"object","additionalProperties":false,"required":["id"]},"SiteRouteWaypoint":{"properties":{"site":{"properties":{"id":{"type":"string","description":"Site unique ID specified in the request"},"location":{"$ref":"#/components/schemas/GeographicLocation"},"time_window":{"title":"TimeWindow","description":"The range of time when a visit to the site is allowed.","allOf":[{"$ref":"#/components/schemas/TimeWindow"}]},"untimely_operations_costs":{"title":"UntimelyOperationsCosts","description":"Costs of untimely arrival to the site.\n\nWhen vehicle arrives to the site too early or too late in respect with the site time window, the corresponding cost is added to the overall cost of the route.","allOf":[{"$ref":"#/components/schemas/UntimelyOperationsCosts"}]},"load":{"$ref":"#/components/schemas/Load"},"unperformed_cost":{"type":"number","description":"Cost of non-performing a visit.","minimum":0,"default":100000000.0},"duration":{"type":"number","description":"Duration of the job, performed during the site visit, seconds.\n\nExample: time to handle goods or perform services during the site visit.","minimum":0,"default":0.0},"preparing_duration":{"type":"number","description":"Time before the job during the site visit, seconds.\n\nFor co-located sites, will only be accounted for the first site in sequence.\n\nExample: parking time or time for security clearance during site visit, which will happen once if several sites share the same geo coordinates and time window (\"co-located\").","minimum":0,"default":0.0},"loading_duration":{"type":"number","description":"Duration of loading the goods at the depot, seconds.\n\nWill be added to `depot.duration` to adjust time spent by vehicle at the depot.","minimum":0,"default":0.0},"required_capabilities":{"title":"CapabilitiesList","description":"Vehicle capabilities required on site.\n\nA site can require vehicle with certain characteristics, such as cold storage, or a tailgate lift. Multiple capabilities are allowed. See `fleet{}.capabilities`.","type":"array","items":{"title":"Capability","type":"string"},"minItems":1},"job":{"type":"string","description":"Type of job performed at a site.\n\nFollowing types are supported:\n* `delivery` - goods are picked up at depot and delivered to this site;\n* `pickup` - goods are picked up at this site and delivered to the site specified in `deliver_to` field or to the depot at the end of the route.","enum":["pickup","delivery"],"default":"delivery"},"deliver_to":{"type":"string","description":"For `pickup` jobs, specifies `id` of destination site for delivery."},"same_route_key":{"type":"string","description":"Ensure that sites with equal `same_route_key` will appear on the same route.\n\nNote that all unique `same_route_key` values must be also specified at `constraints.same_route_sites`."}},"type":"object","required":["location","time_window","id"],"additionalProperties":false,"description":"Site route waypoint","title":"SiteWaypoint"},"is_colocated":{"type":"boolean","default":false,"description":"The waypoint shares same geo coordinates and time window with one or more other waypoints, and is a part of co-located sequence in the route.\n\nCo-located waypoints affect the way job duration is calculated, see notes for `duration` above."},"duration":{"description":"Duration of job at waypoint (handling goods, performing services, etc), seconds.","type":"number","minimum":0},"arrival_time":{"type":"string","description":"Time of arrival to waypoint, ISO8601 timestamp in UTC format"},"departure_time":{"type":"string","description":"Time of arrival to waypoint, ISO8601 timestamp in UTC format"},"idle_duration":{"type":"number","minimum":0,"description":"Idle time during waypoint visit after arrival and before starting the job, seconds."},"travel_duration":{"type":"number","minimum":0,"description":"Travel time to waypoint, seconds"},"untimely_arrival_duration":{"type":"number","description":"Time of untimely arrival to waypoint, seconds. Negative for early arrival (before `time_window.start`), positive for late arrival (after `time_window.end`)"},"travel_distance":{"type":"number","minimum":0,"description":"Travel distance to waypoint, meters"},"travel_energy":{"type":"number","minimum":0,"description":"Travel energy to waypoint, kWh"}},"type":"object","additionalProperties":false,"required":["arrival_time","departure_time","travel_distance","travel_duration","travel_energy","duration","idle_duration","untimely_arrival_duration","site"]},"SolutionStatistics":{"type":"object","description":"Accumulative statistics for solution","properties":{"objective_value":{"type":"number","minimum":0,"description":"(internal) solution objective value"},"total_cost":{"type":"number","description":"Total vehicle cost","minimum":0},"total_cost_and_penalty":{"type":"number","description":"Total vehicle cost with all violations","minimum":0},"total_penalty":{"type":"number","description":"Total violations cost","minimum":0},"total_locality_penalty":{"type":"number","description":"Total cost of locality violations","minimum":0},"total_same_route_penalty":{"type":"number","description":"Total cost of soft same route sites constraint violation","minimum":0},"total_depot_throughput_penalty":{"type":"number","description":"Total cost of depot throughput violation","minimum":0},"total_duration":{"type":"number","description":"Total time of all routes (end of latest route - begin of earliest route)","minimum":0},"total_travel_duration":{"type":"number","description":"Total time spent in transit for all routes","minimum":0},"total_idle_duration":{"type":"number","description":"Total time spent not performing service at site, and not travelling between sites (`total_duration - total_travel_duration - sum(site.duration)`)","minimum":0},"total_travel_distance":{"type":"number","description":"Total transit distance for all routes","minimum":0},"total_travel_energy":{"type":"number","description":"Total transit energy for all routes","minimum":0},"untimely_operations":{"$ref":"#/components/schemas/UntimelyOperationsStatistics"},"total_moved_load_kgkm":{"type":"number","description":"Total load in kilograms, moved over distance in kilometers","minimum":0},"total_moved_load_countkm":{"type":"number","description":"Total load in countable units, moved over distance in kilometers","minimum":0},"unserved_count":{"type":"number","multipleOf":1.0,"minimum":0,"format":"int64","description":"Number of sites not included in route due to constraints and shortage of vehicles"},"employed_vehicles_count":{"type":"number","multipleOf":1.0,"minimum":0,"format":"int64","description":"Number of vehicles utilized in solution routes"}},"additionalProperties":false,"required":["total_cost","total_cost_and_penalty","total_penalty","total_locality_penalty","total_same_route_penalty","total_depot_throughput_penalty","total_duration","total_travel_duration","total_travel_distance","total_travel_energy","total_idle_duration","untimely_operations","objective_value","unserved_count","employed_vehicles_count"]},"UnservedSite":{"type":"object","description":"Unserved site reason and definition","properties":{"reason":{"type":"string","description":"Reason for site left unserved."},"site":{"title":"Site","description":"Unserved site definition","allOf":[{"$ref":"#/components/schemas/Site"}]}},"required":["reason","site"]},"UnservedSitesDictionary":{"type":"object","additionalProperties":{"title":"UnservedSite","allOf":[{"$ref":"#/components/schemas/UnservedSite"}]},"description":"Unserved sites and unserved reasons"},"UntimelyOperationsStatistics":{"type":"object","description":"Untimely site arrival statistics","properties":{"early_sites_count":{"type":"number","description":"Number of sites with early arrival (`arrival_time < site.time_window.start`)","minimum":0,"multipleOf":1.0,"format":"int64"},"early_duration":{"type":"number","description":"Sum of time deltas for early arrivals (`sum(|arrival_time - site.time_window.start|)`)","minimum":0},"total_sites_count":{"type":"number","description":"Number of sites with untimely (late or early) arrival","minimum":0,"multipleOf":1.0,"format":"int64"},"total_duration":{"type":"number","description":"Sum of time deltas for untimely arrivals (`sum(|arrival_time - time_window.start|) + sim(|arrival_time - time_window.end|)`","minimum":0},"late_sites_count":{"type":"number","description":"Number of sites with early arrival (`arrival_time > time_window.end`)","minimum":0,"multipleOf":1.0,"format":"int64"},"late_duration":{"type":"number","description":"Sum of time deltas for late arrivals (`sum(|arrival_time - time_window.end|)`)","minimum":0}},"additionalProperties":false,"required":["early_sites_count","early_duration","total_sites_count","total_duration","late_sites_count","late_duration"]},"VehicleRoute":{"type":"object","description":"Vehicle route, statistics and waypoints","properties":{"vehicle":{"title":"RouteVehicle","description":"Vehicle on route","allOf":[{"$ref":"#/components/schemas/RouteVehicle"}]},"statistics":{"title":"RouteStatistics","description":"Route statistics","allOf":[{"$ref":"#/components/schemas/RouteStatistics"}]},"waypoints":{"type":"array","description":"Vehicle route waypoints","title":"VehicleRouteWaypoints","items":{"type":"object","title":"VehicleRouteWaypoint","oneOf":[{"$ref":"#/components/schemas/DepotRouteWaypoint"},{"$ref":"#/components/schemas/SiteRouteWaypoint"}]}},"active_shift":{"title":"RouteShift","description":"Vehicle shift chosen for the route","allOf":[{"$ref":"#/components/schemas/RouteShift"}]}},"additionalProperties":false,"required":["vehicle","statistics","waypoints"]},"RouteOptimizationSolution":{"type":"object","description":"Optimized routes","properties":{"statistics":{"title":"SolutionStatistics","description":"Statistics on optimized routes","allOf":[{"$ref":"#/components/schemas/SolutionStatistics"}]},"routes":{"type":"array","description":"List of optimized routes","title":"VehicleRoute","items":{"allOf":[{"$ref":"#/components/schemas/VehicleRoute"}]}},"unserved":{"title":"UnservedSitesDictionary","description":"Unserved sites, not planned as a part of any route.","allOf":[{"$ref":"#/components/schemas/UnservedSitesDictionary"}]},"options":{"title":"Options","description":"Route optimization options.","allOf":[{"$ref":"#/components/schemas/Options"}]},"fleet":{"title":"VehiclesDictionary","description":"Fleet of available vehicles to visit sites.","allOf":[{"$ref":"#/components/schemas/VehiclesDictionary"}]},"depot":{"type":"object","properties":{"location":{"$ref":"#/components/schemas/GeographicLocation"},"time_window":{"title":"TimeWindow","description":"Time window for depot operations.\n \nRange of time, when depot is allowed to dispatch or accept returning vehicles.","allOf":[{"$ref":"#/components/schemas/TimeWindow"}]},"untimely_operations_costs":{"title":"UntimelyOperationsCosts","description":"Costs for depot time window violation.\n\nVehicles dispatched too early (before depot time window start) or returned too late (after time window end) will result violation cost added to the total cost of the route.","allOf":[{"$ref":"#/components/schemas/UntimelyOperationsCosts"}]},"delayed_start_costs":{"title":"DelayedStartCosts","description":"Costs of delayed start of a route at the depot.\n\nVehicles dispatched too late after depot or vehicle shift time window start will result corresponding violation cost added to the total cost of the route.","allOf":[{"$ref":"#/components/schemas/DelayedStartCosts"}]},"duration":{"type":"number","description":"Duration that vehicle spends at a depot (e.g. goods loading), seconds.","minimum":0,"default":0.0},"throughput":{"$ref":"#/components/schemas/DepotThroughput"},"throughput_violation_costs":{"title":"ThroughputViolationCosts","description":"Costs of violating defined depot throughput.\n\nAdded to the total cost of the route when load handled by depot exceeds defined throughput limits.","allOf":[{"$ref":"#/components/schemas/ThroughputViolationCosts"}]}},"required":["location","time_window"],"additionalProperties":false,"description":"Depot where all vehicles start and optionally finish their routes.","title":"DeprecatedDepot","deprecated":true},"depots":{"$ref":"#/components/schemas/DepotsDictionary"},"constraints":{"$ref":"#/components/schemas/Constraints"}},"additionalProperties":false,"required":["options","statistics","fleet","routes"]},"Response":{"$ref":"#/components/schemas/RouteOptimizationSolution"}}},"servers":[{"url":"https://routinghub.com/api/routing/v1-devel","description":"Routing API endpoint"}],"tags":[{"name":"routing","x-displayName":"Routing operations"},{"name":"service","description":"API endpoints for development, monitoring and maintenance","x-displayName":"Service operations"}],"paths":{"/schemas/openapi.json":{"get":{"tags":["service"],"operationId":"openapiSchema","summary":"OpenAPI 3.0 schema","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object"}}}}}}},"/ping":{"get":{"tags":["service"],"operationId":"pingService","summary":"Status and availability","description":"Provides information in service avialability and status","responses":{"200":{"description":"Service is available","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["OK"]}}}}}}}}},"/doc":{"get":{"tags":["service"],"operationId":"apiDocumetation","summary":"Documentation","description":"API documentation in HTML format","responses":{"200":{"description":"OK","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/add":{"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Request"}}}},"responses":{"200":{"description":"Task has been queued for execution.","headers":{"Location":{"description":"URL to poll for task completion.","schema":{"type":"string"}}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskInfo"}}}},"400":{"description":"Invalid or empty JSON in POST request body","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"text/html":{"schema":{"type":"string"}}}},"401":{"description":"Request is not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"text/html":{"schema":{"type":"string"}}}},"500":{"description":"Server error during request processing","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"text/html":{"schema":{"type":"string"}}}}},"security":[{"Bearer":[]}],"tags":["routing"],"operationId":"addRoutingRequest","summary":"Submit routing request"}},"/result/{id}":{"get":{"parameters":[{"name":"id","in":"path","description":"Task ID to query","schema":{"type":"string","format":"byte","minLength":22,"maxLength":22},"required":true}],"responses":{"202":{"description":"Task is executing","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskInfo"}}}},"200":{"description":"Task execution completed","content":{"application/json":{"schema":{"allOf":[{"oneOf":[{"type":"object","title":"ResultResponse","properties":{"result":{"$ref":"#/components/schemas/Response"}},"required":["result"]},{"title":"ErrorResponse","allOf":[{"$ref":"#/components/schemas/Error"}]}]},{"$ref":"#/components/schemas/TaskInfo"}]}}}},"401":{"description":"Request is not authorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"text/html":{"schema":{"type":"string"}}}},"404":{"description":"Requested task is not found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"text/html":{"schema":{"type":"string"}}}},"500":{"description":"Server error during request processing","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}},"text/html":{"schema":{"type":"string"}}}}},"security":[{"Bearer":[]}],"tags":["routing"],"operationId":"getRoutingResult","summary":"Receive routing result"}}}}